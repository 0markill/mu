---
AWSTemplateFormatVersion: '2010-09-09'
Description: MU scheduled task in a specific environment containing a CloudWatch event and a RuleTarget
Parameters:
  EcsTaskRoleArn:
    Type: String
    Description: ARN of IAM role for ECS task to assume
  EcsCluster:
    Type: String
    Description: Name of the value to import for Ecs Cluster to deploy to.
  ScheduleName:
    Type: String
    Description: Name of scheduled task
  ScheduleExpression:
    Type: String
    Description: Timespec cron(* * * * ? *) or rate(timespec) of scheduled task
  ScheduleCommand:
    Type: String
    Description: the actual command line to execute
  ServiceName:
    Type: String
    Description: Name of service
  MicroserviceTaskDefinitionArn:
    Type: String
    Description: TaskDefinition as a String
Resources:
  ScheduledRule:
    Type: "AWS::Events::Rule"
    Properties:
      ScheduleExpression: !Sub ${ScheduleExpression}
      State: ENABLED
      Targets:
      - Id: ScheduleRuleId
        #Arn: !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${EcsCluster}'
        Arn:
          Fn::ImportValue: !Ref EcsCluster
        RoleArn: !Ref EcsTaskRoleArn
        Input: !Sub '{ "containerOverrides": [ { "name": "${ScheduleName}", "command": ["${ScheduleCommand}"] } ] }'
        EcsParameters:
          #TaskDefinitionArn: !Ref MicroserviceTaskDefinitionArn"
          TaskDefinitionArn: !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/${MicroserviceTaskDefinitionArn}'
          TaskCount: 1

        #Arn: !Ref MicroserviceTaskDefinitionArn
        #Arn: !Ref EcsCluster
         #TaskDefinitionArn: !Sub '${EcsTaskRoleArn}'
         #TaskDefinitionArn: !Sub '${MicroserviceTaskDefinitionArn}'
         #TaskDefinitionArn: !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/${MicroserviceTaskDefinitionArn}'
         #!Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${EcsCluster}'
