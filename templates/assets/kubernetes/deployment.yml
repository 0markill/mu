apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Namespace }}

---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .ServiceName }}-deployment
  namespace: {{ .Namespace }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .ServiceName }}-deployment
      app.kubernetes.io/part-of: {{ .ServiceName }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .ServiceName }}-deployment
        app.kubernetes.io/part-of: {{ .ServiceName }}
    spec:
      containers:
      - name: {{ .ServiceName }}
        image: {{ .ImageUrl }}
        ports:
        - containerPort: {{ .ServicePort }}
        readinessProbe:
          httpGet:
            port: {{ .ServicePort }}
            path: {{ .ServiceHealthEndpoint }}
            scheme: {{ .ServiceHealthProto }}
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            port: {{ .ServicePort }}
            path: {{ .ServiceHealthEndpoint }}
            scheme: {{ .ServiceHealthProto }}
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 3
          successThreadhold: 2
          failureThreshold: 5
---

kind: Service
apiVersion: v1
metadata:
  namespace: {{ .Namespace }}
  name: {{ .ServiceName }}-service
  labels:
    app.kubernetes.io/name: {{ .ServiceName }}-service
    app.kubernetes.io/part-of: {{ .ServiceName }}
spec:
  selector:
    app.kubernetes.io/name: {{ .ServiceName }}-deployment
    app.kubernetes.io/part-of: {{ .ServiceName }}
  ports:
  - name: {{ .ServiceProto }}
    port: {{ .ServicePort }}
    targetPort: {{ .ServicePort }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: {{ .ServiceName }}-ingress
  namespace: {{ .Namespace }}
spec:
  rules:
  {{range .HostPatterns}}
  - host: "{{.}}"
    http:
      paths:
      - backend:
          serviceName: {{ $.ServiceName}}-service
          servicePort: {{ $.ServicePort }}
        path: /
  {{end}}
  {{range .PathPatterns}}
  - http:
      paths:
      - backend:
          serviceName: {{ $.ServiceName}}-service
          servicePort: {{ $.ServicePort }}
        path: "{{.}}" 
  {{end}}