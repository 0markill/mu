// Code generated by go-bindata.
// sources:
// assets/bucket.yml
// assets/cluster.yml
// assets/pipeline.yml
// assets/repo.yml
// assets/service.yml
// assets/vpc-target.yml
// assets/vpc.yml
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsBucketYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x4d\x4b\xc3\x40\x10\x86\xef\xfb\x2b\x46\x28\xf4\xb4\x10\xed\xa9\x7b\xab\xa8\xe0\x41\x0d\xd9\xda\x9e\xb7\x71\x52\x17\xb3\x1f\x4c\x66\xa1\x52\xfa\xdf\x25\x1b\x22\x5b\xcd\x6d\xf2\xce\x3c\xfb\xbc\x52\x4a\xb1\xd9\xeb\x2d\xba\xd8\x1b\xc6\xa7\x40\xce\xf0\x0e\x69\xb0\xc1\x2b\x58\xde\x55\xb7\x95\xac\xd6\xb2\x5a\x2f\xc5\x03\x0e\x2d\xd9\xc8\x39\x79\x79\x87\x43\x6a\xbf\x90\xc1\x7a\xd0\x2b\x51\x1b\x32\x0e\x19\x69\x50\x02\xe0\x3e\x47\x35\x61\x67\x4f\xe3\x0c\xb0\xfd\x8e\xa8\x40\x33\x59\x7f\xcc\x3f\xae\x68\xd3\x26\x70\x80\x34\x20\x74\x81\x80\x3f\x71\x7e\xc0\x1b\x87\xa2\xc1\x21\x24\x6a\xb1\xc0\x97\xe0\xcd\x5e\x2b\xa5\x57\x4a\x4d\x51\x4e\x6a\x0a\x11\x89\xed\x74\x33\x7e\x53\xf8\x6a\x1c\x2a\xb8\xd1\xe9\x00\x8b\x73\x69\x7a\x91\x8b\x73\x06\x35\x78\xb4\xc1\xff\x8e\x9b\xb6\x0d\xc9\xf3\xf3\xc7\x45\xbc\x25\x8e\x89\xff\x49\x5c\x95\x19\xf9\x10\xba\x5c\x21\xda\x88\xbd\xf5\x73\x97\xbc\xbc\x33\x7d\x1a\x05\x1a\xec\xa0\xd0\x7d\x3c\xc5\x40\x3c\xab\x16\x92\x2e\xc9\xe9\x5a\xfe\xd1\x15\x3f\x01\x00\x00\xff\xff\x25\xb1\xdb\xa7\xbd\x01\x00\x00")

func assetsBucketYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsBucketYml,
		"assets/bucket.yml",
	)
}

func assetsBucketYml() (*asset, error) {
	bytes, err := assetsBucketYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/bucket.yml", size: 445, mode: os.FileMode(420), modTime: time.Unix(1485880199, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsClusterYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x1a\xfd\x6f\xdb\x36\xf6\x77\xff\x15\xaf\xbe\x1e\xbc\x0d\x95\xed\xa4\xeb\xb0\x09\xd7\x0d\x8e\xe3\xb5\xc6\x9c\xd6\x88\xdd\x16\xb8\xb6\x28\x68\xe9\xd9\xe6\x55\x22\x75\x24\x95\xc4\xeb\xe5\x7f\x3f\x90\xd4\x07\x29\xc9\x59\x5a\x6c\x77\xb7\x73\x60\xd4\x7a\x7c\x7c\xdf\x5f\xa4\x1a\x04\x41\x6f\xf2\x66\xb5\xc6\x34\x4b\x88\xc2\x9f\xb9\x48\x89\x7a\x8d\x42\x52\xce\x42\x18\x9c\x8e\x4f\xc6\xc1\xf8\x87\x60\xfc\xc3\xa0\x77\x8e\x32\x12\x34\x53\x66\xe5\xe2\x15\x20\xbb\xa2\x82\xb3\x14\x99\x82\x88\x33\x45\x28\xa3\x6c\x07\x84\xc1\x6c\xba\x82\x28\xc9\xa5\x42\x01\x84\xc5\x40\x99\x54\x84\x45\x28\x61\xcb\x05\x88\x9c\x19\xc4\x62\x0f\x0a\xd9\x5b\x12\x41\x52\x54\x28\x64\xd8\x03\x98\x17\xe8\xeb\x43\x86\xfa\x19\xc0\xfc\x82\x95\x12\x94\xed\x0c\xc0\x93\xa5\xc4\x07\x75\xc8\x10\x14\x87\x5c\xe2\xb0\x40\xdb\x92\x3c\x51\x21\xa8\xd3\x61\x4a\x23\xc1\x7b\x66\x2b\x15\x18\x4f\x49\x46\x22\xaa\x0e\x2e\x83\x17\x79\xba\x41\xe1\xef\x1c\x9c\x0c\xda\x1c\x2d\x22\xf0\xad\xa3\x9a\xe2\x90\x90\x9c\x45\x7b\xa0\x0c\x0e\x3c\x17\xae\x19\x7a\x00\x17\xe4\x66\x45\x7f\xc5\xdf\xe4\x77\xda\xc1\xef\x82\xdc\xd0\x34\x4f\x81\x75\xf1\xdd\x13\x05\x11\x61\xb0\xc1\x42\x00\x8c\x8f\x88\xf0\x0b\x1e\x5e\x90\xf4\x5e\x36\x2d\x50\xb5\x56\x44\x4a\x1e\x51\xa2\x10\xae\xa9\xda\xc3\x35\x17\x1f\x51\xd4\x02\x0c\x01\x16\x48\xae\x10\x36\x09\x61\x1f\xf5\x86\x98\x4a\xb2\x49\x10\x56\xab\xe7\x40\xa2\x08\xa5\x6c\x78\x63\xa0\x55\x5c\xc9\xfd\x24\x49\xf8\x75\xd8\x66\xbe\xca\x37\x0c\x15\x6c\x05\x4f\xe1\x7a\x4f\xa3\xbd\x11\x43\x23\xb7\x68\xb6\xb4\xb8\xa0\x6c\x81\x6c\xa7\xf6\x21\x0c\x7e\xb0\xa6\xbc\x20\x37\x15\xe8\xe4\xfb\x81\x2f\xcb\x78\x68\xfe\x46\x63\x03\x36\x12\x61\xbc\x24\x4a\xa1\x60\x21\xf4\xbf\x7a\xf7\x2e\xfe\x74\xf2\xe8\xf1\xed\xd7\xef\xde\x0d\xef\xf3\x30\x2a\x7e\x9e\xde\x7e\xdd\x37\x24\xa7\x9c\x49\x25\x08\x65\xca\xd3\x71\x90\xe6\x52\x69\x9f\x11\xb8\x22\x09\x8d\x61\x3a\x3f\xbf\x84\x4d\xc2\xa3\x8f\x21\xdc\x0c\xcd\xdf\xe8\x66\x68\x2c\x15\x91\x04\x5f\xe6\x6a\xbd\x17\x28\xf7\x3c\x89\x3b\x4c\x56\xad\x01\x51\x85\xcd\x08\x48\xbd\x11\x78\xae\x00\xaf\x74\x96\x5e\xd3\x24\xd1\x2c\x29\xa3\x4a\x3b\x34\xfe\xad\x58\xfc\x7e\x5c\xf1\x9f\xb3\x2f\x64\x4f\xd9\x97\x72\x7f\x6c\xb8\xcf\x53\xb2\xc3\x79\x17\x53\x1d\xdc\x93\x8b\x79\x9d\x79\xc7\xe2\xda\x0d\xbb\xd7\x59\x54\x12\xbb\x3b\x03\x4c\xf8\xf3\x2d\xa8\x3d\x6a\x0f\xe5\x26\x17\x68\x9a\x71\xa1\x4c\x19\xd3\x70\x43\xac\x07\xb0\xcc\x37\x09\x8d\x6c\xd8\xce\x63\xf9\x7b\x91\x97\x36\x0f\x68\x2c\x7b\x17\xa8\x48\x4c\x14\xd1\xa4\x27\x6f\x56\x61\x38\x4d\x78\x1e\xdb\x72\xad\xe9\x85\x73\xa6\x50\x6c\x49\x54\x64\x77\x55\x51\x9f\x09\x9e\x67\x85\x44\x00\x01\x2c\xc8\x06\x93\xf2\x51\x7f\xe2\xd2\x3c\xfd\xaa\x8e\x4e\x39\xdb\xd2\x5d\x2e\x0c\xe9\x7e\x85\xeb\x57\xe9\xf2\x13\x78\xf5\xda\x5b\x28\x8a\x88\x07\x2b\xd3\xfe\x3e\x02\x4d\x72\xc5\x4d\xf4\xe9\x76\xf1\x99\x42\x35\xca\xbc\xb7\x56\x94\x62\xdf\x50\x46\x8e\x8a\x48\xbb\x07\x1d\xb1\x55\xd9\x73\x6c\x04\xfe\x54\x0a\xe6\x95\x5a\x7f\xeb\x2f\x78\xd0\x1b\x76\x82\x30\xe5\xd4\x33\xf8\xca\x16\x50\xed\x7c\xc6\x19\x7e\x5d\xd1\xf2\x2b\xa5\x4f\xac\xae\x1a\x5d\x34\x2b\x12\x9d\x4d\xcf\xa7\x54\xa0\x78\xcd\xbb\x2c\xf2\x10\xf1\x9c\xa9\x8a\x9a\xd7\xca\x7c\x2a\x65\xa7\xba\x93\xca\x94\xb3\x98\x6a\x37\x1a\x73\x3f\x27\xd2\xb3\x56\xff\x67\x16\x86\x2f\xb8\xea\xd7\x41\x6b\x40\xb3\x7f\xe6\x24\x91\xfd\x10\xde\x3e\xb8\xc4\x6d\x69\xe1\x47\x30\x18\xbc\xef\x5d\xa2\xe4\xb9\x88\xd0\x10\x9c\x45\x72\x6a\x59\xbb\x89\x68\xb2\x66\x36\x35\xa9\x53\x36\xc4\xd9\x74\xa5\x63\xac\x08\x31\x93\x2a\xad\x2d\x0e\x82\xf7\x60\xb0\x8b\xbc\xce\x90\xc5\xf2\x25\x0b\xe1\xed\x7b\x1b\x54\x82\x67\x28\x14\xc5\x2a\x9e\x5e\x2f\xa7\x7f\xe7\x0c\xe7\x31\x32\x45\xb7\xb4\x14\x4d\x7f\xb4\x6e\xab\x2c\xa1\xaa\x06\x05\xd0\x7f\xd4\x77\x9e\x34\xca\xdc\xd4\x86\xd7\xba\x54\x84\xf0\x60\x95\x6f\xe0\xe1\xa7\x46\xdd\xb9\x2d\xb6\x2c\x4c\x2c\x7a\x09\x63\xcc\x0b\xc6\x70\xd3\x72\xee\x2a\x63\x58\x96\x6e\xa5\xcc\xb8\xb5\x9a\x79\x6a\x4f\xdb\x9d\x6e\xde\xb4\x63\xca\xe2\x74\xe7\xdd\x9a\xec\x9c\x1a\xf4\x0b\x1e\x6c\x01\xac\x54\x2c\xd5\xd2\x14\x8c\xd5\x57\x8a\x44\x1f\x3d\x14\x6d\x53\xb2\x23\x0a\x27\xca\xea\x17\x82\x12\xb9\x5d\x9f\x0a\x34\x5a\x2e\x79\x42\xa3\x2a\xba\xcb\xa0\x58\xd1\x1d\x23\x4e\x89\x59\xd3\x14\x79\xae\x42\x58\xae\x4f\x9e\x5c\x18\xf0\xab\x2c\x26\x0a\xfd\xed\x8e\xaf\x2f\x79\xa2\xff\xb1\x58\x35\xa1\x0b\xca\x2a\x1b\xce\xd9\x0a\xc5\x15\x8d\x3c\xf3\x19\x03\x9e\x11\x15\xed\x9b\x86\xd5\x85\x27\x97\xa8\x45\x71\xe5\xd0\x9f\x37\x84\xaa\x97\xcc\x17\x5e\x86\x30\xd0\xda\xba\xe3\x80\x2b\xed\xb1\x78\x2d\x7e\x58\xd4\x23\xa1\x39\x89\xff\x91\x4b\xa5\xc7\x78\x4b\x65\xba\x27\x6c\x87\x73\xd6\x70\x61\x33\xf4\x9d\x88\xea\x48\xa3\x62\xd3\x94\xf3\x24\xe6\xd7\x2c\x84\xc7\xe3\x71\x59\xce\x2c\x5a\xcd\x36\x84\x93\x7a\xca\xf8\x3f\xd2\x2a\xd0\x6a\x5d\x60\xca\xc5\x61\x92\x10\x91\x3e\xa7\xbb\x7d\x4b\x31\xd3\xc7\xdf\xe8\x10\x09\x43\x83\x75\x4c\x1f\xbd\xe6\x4d\x10\xa6\x06\x18\xab\x05\x7a\xc4\xa3\xdb\x82\x17\xfc\x08\x0f\x3f\xb5\x66\xc6\xdb\xbf\x9a\xce\xf2\x04\x52\xca\x72\x55\xe7\x3c\x2a\x41\x23\xab\xb5\xdd\x7e\x89\x12\xc5\x95\x49\xa7\x02\x47\xaf\xca\x4c\x8f\x16\x5a\xe4\xd1\x6c\xba\x2a\x75\x56\x44\x51\xa9\x68\x14\xc2\xe4\x0a\x05\xd9\x95\xd9\xba\x44\x41\x79\xec\x9a\x67\xa6\x67\x1c\x9b\xa3\x66\x4d\x5a\xa7\x1b\x63\x54\x73\xa5\xb5\x7b\x4b\x74\xd7\x02\x93\xa8\xea\x1b\xb6\x96\x78\x5b\x9c\x88\x00\x38\xa7\x29\x32\xe9\x63\x5b\x45\x8b\x06\x70\xb4\x02\xd5\x0d\xa4\x72\x78\x9a\x11\x41\x25\x67\x2f\x33\x14\x44\x71\x11\xc2\x33\x5d\x73\x50\xac\xf7\x84\xb9\x92\x3a\xfe\x5e\x94\x2d\xfb\xf7\x76\x37\x65\x8e\xb7\xff\x56\x7a\xdb\x99\xd0\xff\x64\xce\x9e\xb3\xcf\xf5\x75\x59\x27\xfe\x33\xae\x5e\xa0\x94\x4d\x3f\xb7\xbb\xe8\xdd\x35\xab\xa3\x27\xf7\x0a\x9f\x54\x83\xbd\xd1\xbc\x7b\xb8\x77\xa7\x83\xc8\x10\x71\xc7\xdd\x88\xa7\x29\x61\xb1\x37\x02\x03\x8c\x4f\x3e\x90\x38\xfe\x50\x8e\x5f\x1f\x14\xff\x10\xb9\x73\x51\x6b\x7f\x11\x64\xff\x6a\xac\x02\xfc\xe5\xc1\x68\x43\xd9\x68\x43\xe4\xbe\xb5\x86\xd1\x9e\xeb\x5a\xf9\x61\xba\x78\xb5\x5a\xcf\x2e\x9f\x3e\xfc\x54\x1b\xf5\x16\xe0\xc7\x1f\x61\x84\x2a\x1a\x61\x24\xf5\x77\x68\xa5\x77\xc8\x6c\x69\x82\x0d\xc9\xfb\x66\x47\xb4\x65\xfa\x1b\xec\xf3\xcc\xec\xea\xb7\xc5\x66\xca\x54\xda\x23\x62\xbf\x4d\x09\x65\xef\x5b\x60\xa9\x67\x8b\xa7\x0f\x3f\xd5\x83\xc6\x3c\xbe\x6d\x61\x09\xdc\x51\xce\x4a\xb4\x4b\xf3\xd4\xc4\x4a\x79\xac\xbb\xfa\x78\x3c\xfe\x76\x3c\x1e\x34\x16\xf9\x35\x43\x11\x82\xe0\x5c\x35\x56\x76\x66\xd0\x6c\xaf\xd4\x6a\xef\x39\xff\x28\x87\xb1\x51\x9f\xe4\x8a\x07\x02\x13\x4e\x62\x14\x5f\x68\x88\x16\x9d\x40\x73\x68\x9b\x46\x09\xba\xdb\xa1\x90\x4f\x33\x2e\xd5\x30\x37\xf3\x4e\x0b\x29\x23\x6a\xff\xb4\x9a\xb8\x87\xed\x4c\x18\x96\x41\x3d\x3c\x1a\xcd\x2d\xa2\xc4\x24\xfb\xd3\x11\xcf\xd4\x88\x5c\x4b\x13\x6f\x5a\x6a\xca\xa8\x82\xe0\x0a\x82\xc0\xb8\x0d\x5c\xb7\xe9\xac\xbe\x85\x20\x10\x85\x2c\x1d\x49\x69\x56\xb5\xeb\xe0\x4e\x47\x02\x88\x9c\x11\xf9\xb4\xe1\x12\x69\x47\xba\x46\x74\xca\x83\xbc\xa2\x5e\x46\x16\x5e\xb0\xb1\xda\x04\x03\x20\x23\x9b\x04\x63\x67\x86\x6b\xae\xcb\x5c\xe0\xa5\xbd\x17\x3d\x8a\xd5\x91\x27\x60\xcf\x0a\xdd\xd9\x72\x27\xe6\x6f\x04\xd8\x91\xae\x54\xde\xc5\xd8\xda\x59\x3c\x95\xfd\x01\xa3\x5c\x50\x75\x28\x2e\x1c\xe0\xad\x45\x7a\xce\xa5\x5a\x3d\x83\xf7\x5d\xe7\xea\x82\x4c\xfb\xfa\x60\x4e\xd2\x12\xba\x14\x5c\x2b\x5e\xcd\x64\xa7\x8d\x85\xc6\x79\x1b\x1e\xcc\xb7\xf0\xd6\x39\x53\x3e\x02\xff\xb4\x68\x9e\xfa\x26\x14\x5e\x70\xd3\x09\xfa\xa5\x6c\xaf\x24\x8a\x73\xa7\x14\xdb\xa3\xd9\x19\x91\xf8\xdd\xb7\xae\xdd\x3b\x92\xcc\x29\x90\x10\xdc\xf8\x29\x73\xc8\x53\x7b\x04\x4e\x12\x08\x0e\x40\xae\x65\xa0\xad\xbe\xe1\x5c\x49\x25\x48\xe6\x21\xff\x57\xe2\xbf\xc5\x54\x9a\x43\x07\x04\x08\x0f\x7f\xba\x1f\xe7\x8e\x61\xf9\x0e\xd6\x6d\x37\xb6\x9a\xe7\x7c\x72\xa1\x2b\x45\xdb\xd7\xed\xa8\x5c\x12\xb5\x0f\xa1\x3f\x2a\x23\xfe\x92\x3b\x89\x12\x54\x81\xa3\xc1\x96\xb7\xfe\xd5\xcd\xb0\xc0\xe9\x9c\xc8\xa4\xcc\x53\xd4\x08\x76\xf4\x38\xe7\x51\x6e\xe6\xfc\xca\x94\x7a\x42\x42\x1f\x14\xc0\x6c\xbb\xc5\x48\x85\xe0\x5e\x7a\x59\x06\x94\x45\x34\x23\x89\x9f\xd1\xe5\x21\xb2\xe7\x27\x2e\x46\xa7\x43\x92\x92\x5f\x39\x23\xd7\xba\x85\xa6\xce\xba\x1d\x93\xfc\xdb\x2f\xa9\x64\x58\x0b\x7c\xc4\x4e\x46\x0f\xea\x9a\xca\x6a\x66\x13\x09\x23\x19\x14\xf5\xaf\x3e\xb3\x1e\xd1\xbc\x53\xf7\xbb\xb4\xef\x92\xda\xea\x29\x4d\x98\xe8\xd9\xa1\x15\xcc\x1d\xb8\xe7\x28\x3e\x07\x9b\xca\x88\x5f\xa1\x58\xf2\x24\x99\xb1\x38\xe3\x94\xa9\x0e\xb4\x95\x22\x42\xad\x31\xc1\x14\x95\x38\xac\x50\xca\x7a\x3c\xf6\xf0\xf2\x4d\x4a\xd5\x37\xad\x15\x11\xb6\x61\x32\xd4\x4c\x3d\x70\xd9\x41\x43\xe8\x7f\xa3\x5d\x62\x2b\x65\xc7\x95\xd5\x69\x18\x7a\xc5\xf5\x48\x80\x3a\x37\xdb\x50\xd4\xae\xae\x3b\x23\x83\x56\xe6\xbf\xa1\xd7\xba\x54\xd7\x92\x54\xf5\x1c\xdc\x93\xaf\x27\xc7\x9c\xed\x04\x4a\x27\x7c\xe6\xd9\x52\x70\xc5\x23\x9e\x84\xa0\xa2\xba\xb0\xfd\x2c\x78\xba\xe4\xc2\xbc\xdd\x3a\xad\x1b\xdb\x9a\x77\x00\xa7\x34\x16\xf3\xac\x3c\x1d\xd4\x97\xc5\xb3\x64\xf3\x3f\x60\x9c\xc5\xd9\x1f\x64\x97\xef\xc7\x1d\x76\x71\x81\xa5\x5d\xdc\xf7\x55\xb3\xc5\xd9\xa9\xf6\xd5\x65\xde\x51\xcf\xda\xa6\x29\xe4\x3a\xd6\xdb\x3b\x85\x74\x44\xac\x84\xa9\xe4\xfb\xee\xc9\x93\xc7\x4f\x4a\xe8\xca\x5e\x57\x79\x0c\xf5\xa4\xf0\x0c\xd5\x44\x29\xeb\xbf\x61\x01\x76\x0d\xec\x22\xd9\x14\x70\xb0\x34\xe0\x74\xb6\x38\xfb\x33\x68\xd8\x12\xbe\x53\xc5\xa6\x1d\x66\x91\x9c\x25\x9b\xb6\x6e\x09\xd1\x67\xed\x05\x27\xf1\x19\x49\x08\x8b\x28\xdb\xbd\x3e\x0d\xc3\x1a\x50\x9c\x58\xdb\x6a\xda\xeb\x60\xf9\x47\x5e\x30\x37\x66\xbd\x46\xab\xd5\x1a\x56\x9a\x2d\x74\x75\x66\x5d\x57\xf1\xc7\x34\x2c\x36\x1c\xd1\xce\x35\xc0\x44\xb0\xfa\x18\x3f\x4b\x36\xe5\x6d\x80\x7d\x1b\xd1\xba\x3e\xb0\xcc\xb7\x5c\x5c\x13\x11\xd7\xd9\x46\xc4\x0e\x95\xd1\xa4\x49\xaf\x20\xe4\x60\x54\x9d\xb3\x91\x9f\x75\x60\x3d\x5f\xaf\x97\x95\xf2\x6d\x02\xf7\x36\x43\x93\x69\xc7\xd8\x53\x0a\x71\x87\x18\x9f\x5f\xfa\x5e\xe6\x2a\xcb\x6d\xf4\xe8\xc9\xf7\x95\x28\x06\x14\x17\x79\xaf\x54\x16\x8e\x46\xe6\xa0\x3f\x4b\x36\xc3\xf3\x17\x2b\x33\x10\x8e\x7a\xd0\x7a\x47\xbb\x38\x83\x57\x97\x0b\xff\xc5\xab\xa5\xd5\xbb\x77\x29\xf6\x28\xbe\x5e\x4e\x61\x7e\x5e\xbd\x23\xf5\xff\x87\x03\xc0\xec\x46\x93\x2a\x89\x17\x67\x02\x4b\xb1\x31\xbe\x06\xe5\xdb\x5b\x3f\x50\x75\x10\x78\x1a\xd7\xf1\xe0\x85\xa6\x27\xd4\x44\xb0\xf2\x65\xae\xd6\xb8\x44\x1c\x7e\xae\x48\x2d\x51\x3a\x5e\x67\xdd\x71\x7d\x75\xf4\x0d\xb3\x63\xa5\x2f\x91\xa9\xe4\xd1\xfb\x77\x00\x00\x00\xff\xff\x11\x7d\x76\xfc\x2f\x24\x00\x00")

func assetsClusterYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsClusterYml,
		"assets/cluster.yml",
	)
}

func assetsClusterYml() (*asset, error) {
	bytes, err := assetsClusterYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cluster.yml", size: 9263, mode: os.FileMode(420), modTime: time.Unix(1485880413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPipelineYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\xeb\x6f\xdb\x38\x12\xff\xee\xbf\x62\x9a\x5b\xa0\x40\x01\xd9\x51\x92\xbe\x04\x2c\x0e\x6a\xe2\xcb\x19\x97\xc4\x82\x95\xb4\x1f\x0e\x87\x82\x96\xc6\x16\x1b\x89\x14\xf8\xb0\xcf\xbb\xdb\xff\xfd\x40\xea\x61\xca\xaf\x73\xda\xde\x75\x17\xdb\x7c\x8a\x67\x86\x9c\xe1\xfc\x66\x86\x33\x94\xe7\x79\xbd\xf0\x43\x7c\x8f\x45\x99\x13\x85\x7f\xe3\xa2\x20\xea\x3d\x0a\x49\x39\x0b\xe0\xf9\xd9\xa9\x7f\xea\x9d\xbe\xf5\x4e\xdf\x3e\xef\x5d\xa1\x4c\x04\x2d\x95\xe5\xdc\x3e\x40\x49\x4b\xcc\x29\x43\xd0\x92\xb2\x39\x5c\xf2\x14\xa3\x86\x44\x58\x6a\x09\xef\x34\xcd\x53\x98\x71\x01\x09\x67\x8a\x32\xcd\xb5\x84\x14\x73\xba\x40\xb1\xea\x45\x44\x90\x02\x15\x0a\x19\xf4\x00\xae\xa9\xfa\xbb\x9e\x3e\x48\x14\xe6\x17\xc0\xfd\xaa\xc4\x00\x62\x25\x28\x9b\x5b\x42\xc7\x80\x4a\x1a\x8c\x78\xbb\x76\x82\x25\x7f\xc2\x5a\x23\x0e\x8a\x43\xa9\xf3\x1c\x66\x82\x17\x7d\x18\xb3\x7c\x05\x2a\x43\xb8\x23\x05\xf6\x81\x71\x65\x7f\x3d\x4c\x6e\x5a\x25\xef\x04\x61\x49\xf6\x04\x35\xd5\x82\x9a\x3d\x23\x3a\x57\x01\x9c\x14\x44\x2a\x14\x27\xed\xae\xf7\xfc\x11\x59\xb5\xe9\x1d\x1f\x26\x19\x0f\x40\x09\x8d\x47\x68\x89\x31\x11\xa8\xfa\x30\x52\x50\xd0\x79\xa6\x20\xe7\xfc\x11\x24\x2f\x50\x65\x06\x97\x9c\x3e\x22\xbc\x9d\xfa\x6f\xde\x12\xff\xd5\xcb\x8b\x57\x17\xe7\x2f\xcf\xce\x5e\xbe\xf2\x67\xaf\xa7\xe7\x38\x4d\x2f\x2e\x88\xff\xf2\xdc\x27\x17\x67\x6f\x5e\x93\x19\x8c\x43\xad\x32\x6b\x0c\x2c\xa9\xca\x80\x24\x09\x4a\x69\xbc\x64\xbc\xd5\x87\x6b\xeb\xb1\x4c\xa9\x52\x06\x83\xc1\x9c\xaa\x4c\x4f\xfb\x09\x2f\x06\x12\x95\xa2\x6c\x2e\x07\xca\x2c\x96\x3d\x00\x8b\xbd\xb5\x7d\xdf\x29\x1a\x67\xe4\x94\xe9\x7f\x5f\x72\xa6\x08\x65\x95\x53\xec\xda\x4b\x5e\x94\x5a\xe1\x51\x5b\xbc\x7b\x18\xdd\x5c\x7d\xbc\x1e\xde\x0d\x27\xe1\x8d\xff\x31\xbe\x0d\x6f\x6e\xda\x8d\x46\x05\x99\xff\xf7\x2d\xc8\x52\x0e\x12\x9e\xe2\xd4\x2c\x19\x7c\x22\x0b\x12\xf0\x12\xd9\xa7\xf4\xd1\x7b\x63\xb6\xba\xd5\x5f\x78\x98\x5b\xfd\x2d\x4e\x72\xab\xbf\xe4\x18\x29\x4f\x1e\x51\x04\x7e\xdf\x3f\xeb\xfb\x27\xbd\x09\x4a\xae\x45\x82\x36\xe1\xda\x04\x9d\xf0\xbc\xb3\x6f\xf8\x21\x0e\x82\x51\x78\x1b\x04\x86\x63\x19\x91\xe0\x25\x0a\x45\xab\x95\xe6\x2f\x94\x52\x17\x68\x04\x22\x9e\xd3\x64\x75\xc5\x13\x5d\x20\x53\x0d\x1f\x20\x56\x44\x61\x97\xe4\xc1\x70\x36\xc3\x44\x05\x10\xe6\x39\x5f\xb6\x74\xa3\x80\xb2\x84\x96\x24\x0f\x1c\x22\x40\x8c\x62\x41\x13\xec\x12\x3d\x68\x0f\xd8\x27\x05\xf9\x85\x33\xb2\x94\x26\x0a\x1d\xa9\x30\xb1\xe9\xd1\x73\x57\x49\x25\x83\xb5\xd9\x35\x2b\x22\x2a\x0b\xe0\x64\x70\xd2\xfc\x36\xa7\x71\xce\xe9\x55\x94\x95\xa9\x08\xc1\x5a\xb1\x27\x2b\xcb\x5a\x05\xfb\xbc\xb0\xd3\x0f\x87\x3c\xd1\xda\x0e\x27\x2f\x4e\x3a\xf4\x06\xbd\x4d\x4e\xa7\x5e\x9f\x79\xfe\xa9\xe7\xbf\x7e\x5e\x03\xdc\x94\xe4\x3f\x26\xc6\xcd\x1d\xf3\x3d\x60\x6e\x74\x7f\x3d\xd2\xdb\x46\x76\x62\x38\x78\x71\x14\xca\xb0\xd7\xaf\xfb\x34\xc8\xf3\xe0\x1a\xd5\x78\xfa\x09\x13\x75\x80\x55\x87\xcf\x4e\x89\x77\x3a\x79\xc4\x46\xa2\x29\x36\xff\x13\x4b\x23\xbd\xcb\xd2\x56\xc5\xc6\x02\x22\x58\x40\x96\x32\x90\xe7\x41\x10\xb8\x68\xbd\xf8\x5a\x3b\x5e\x6c\xc2\x94\x73\x9d\xce\x6c\x5f\x64\x16\x6c\xb2\x31\x91\x5b\x34\x4a\x8a\x20\x22\x52\x3a\xe1\xf7\xa5\x0e\x3b\x94\xda\xb6\x76\x87\x42\xd1\x19\x49\xd4\x56\x6e\xb7\x12\x41\x10\x09\xde\x3a\xf6\x0a\x4b\x64\xa9\x1c\xb3\xa0\x5b\xff\xf7\x54\x80\x2a\x1d\x9e\xc5\x7a\x0a\x3f\xfd\x6a\xf7\x8d\x15\x49\x1e\x0d\xf9\xb3\x47\x6a\xdd\xb5\x6c\xa7\x2d\xa9\x3a\xbf\x46\xc2\xb6\x57\x50\x1d\xbe\x96\xae\xb3\xde\xd6\x25\x78\x76\x8d\x2a\x54\xaa\x6b\x52\x3f\x14\x4d\x50\x36\xa7\x94\x6b\xc0\xaa\xa3\x5e\x8e\xaf\x86\xd1\x28\x1a\xde\x8c\xee\x86\x35\x6b\xc8\x16\x54\x70\xd6\x4d\xc3\x4a\xfa\xd9\x04\x67\xeb\xbe\xa4\x65\xba\xd7\xb3\x23\xe3\x90\x5b\xd1\xea\x0e\x76\x84\x2c\xa1\x39\xd2\x46\xa8\xee\x35\xf1\x9e\x16\xc8\xb5\x1a\xb1\x5b\xca\xb4\x42\x19\x80\x7f\xea\x82\xba\x75\xd3\xff\xbf\x10\xa5\xce\x69\x76\xc0\x69\xd9\x15\x96\x1b\xd8\x7f\x37\x34\xab\xae\xec\x00\x94\x9d\xee\x6b\x27\x8e\x75\x67\xf5\x54\x10\xeb\xe6\x32\x2e\x31\xa9\xfd\xf9\x9b\x93\xb8\x8b\x26\x71\x4f\xfb\xbe\x43\x2e\x33\x22\x51\x76\xcb\x4e\x75\x09\x74\x48\x00\x09\x2f\x0a\xc2\x52\xb9\x49\xb7\x25\x49\x8b\x1c\x3c\xd9\xb6\xe1\x82\x2c\xfb\x55\x2b\xae\x25\x0a\x33\x69\x21\x53\x55\x57\xae\x30\xcf\xe9\x1c\x99\x1a\x14\x7a\x50\x0d\x1d\x03\xca\xa4\x22\x79\xde\x97\x19\xfc\x06\x32\xdb\xa1\xe0\x6a\x7c\xf9\x8f\xe1\xe4\x63\x18\x8d\x3e\xbe\x1f\x4e\xe2\xd1\xf8\xee\x67\xbf\x7f\x76\x01\x85\x06\x2f\x81\x29\x61\x84\x91\xe6\x5a\x1c\x14\xba\xbf\x2a\x72\x90\x8b\x04\x4a\x2d\x33\xf0\x14\x98\x51\x52\xba\x85\x9c\x6c\x23\x6e\xfe\x94\xf5\xed\x2f\xb4\xec\x50\x67\x34\xdf\x74\x91\x31\x6a\xa7\xda\xc3\x09\x75\x85\x65\xce\x57\xf7\x28\xbf\x4b\x79\x4c\xad\x76\xcf\x71\x45\x27\xa5\x2a\xe3\xea\x9c\x52\x1c\x8c\x1c\xe0\x3a\xdc\x7f\x64\xd6\x8f\xcc\x6a\x33\xab\x8a\x25\x48\x71\xf1\xfb\xcb\xaf\x48\xf0\xf4\x3b\xe6\x57\x29\x78\x7a\x4c\x7e\x19\xb9\x1f\xf9\x55\xfd\xfd\xc8\xaf\xdd\xf9\x65\x62\x44\xdb\xc9\xe0\xf7\x94\x66\xcd\x0c\xbf\x33\xc9\x5a\x66\xd0\xfc\xb7\x27\x97\x4c\x28\x87\x82\x75\x83\xdc\x7d\x1e\x70\xe2\x3c\x56\x64\xee\xce\xc6\x55\x1e\xc6\x6e\xff\xde\xcc\xde\xd2\x9d\xfc\x47\xac\xd4\x6a\x9d\x24\xf0\xcf\x7f\x39\xe7\xdf\xb9\x49\xb3\x8d\x39\xd5\x68\x23\x96\x2e\x89\xc2\x39\x17\xab\x1d\x8b\x00\xc6\x4b\x86\x22\x80\xfb\x8c\x8a\x34\x22\x42\xad\x3a\xdc\xf5\xdc\xe4\x3f\xef\x30\x22\xc1\x17\x34\x35\x2b\xab\x87\x57\x87\x39\xd6\xaa\x63\x7d\x67\x5e\x74\x8d\xaf\x04\x1d\xf6\x25\x67\x33\x3a\xd7\x82\x6c\xcf\x94\xb5\x99\x36\x5d\xd7\x2f\xdc\x1b\x53\x61\xc9\x3b\x12\x86\xd0\x91\xa8\xdf\x9c\x5d\x19\xe7\x55\xb9\x55\xd5\xbe\xdd\x76\x24\x2d\xc5\x11\x9c\x68\x36\x16\xd6\x03\xfe\x06\xbe\xb6\x2a\x1c\x82\xb7\x12\x0b\xbb\xad\xff\xb1\x18\x76\x77\x77\x7c\x13\x7e\x88\x9f\x8a\x5d\x5b\x9f\x1d\xfe\x46\xec\x1d\x8f\xde\x11\xb8\x37\xcc\xa7\x20\x5f\x5f\x7b\xf5\x15\x66\xf0\xd8\x1a\xda\x0f\xa2\xb2\xd6\xee\x16\xf9\x3f\x8e\xb7\xf7\xfa\xec\x08\x7f\xdb\x13\x7f\x23\x67\x6f\x7a\x6f\xed\xe9\xb3\x8d\xf8\x0f\x93\x04\x4b\x45\xd8\xe1\x1a\x57\xc9\x56\xdd\xc5\x9f\x0a\x94\xb5\x7b\xbe\x0e\x99\xf5\x54\x76\x54\x55\x8a\xda\x3b\xf9\x88\xd2\x54\x96\x82\x2f\x9e\x9a\x2b\xd5\x2a\x92\x7f\x23\x64\x6e\x09\xd3\x9d\xcd\x0e\x78\xe7\x52\x4b\xc5\x8b\x2b\xa2\x48\x6b\x7c\xdd\x8b\x98\xbe\xb1\x69\x5b\x37\x8e\x7f\xb8\x5a\xfc\x09\x23\x73\x1d\x22\xdf\x22\x32\xa3\xf5\x40\x01\x3b\xeb\x45\x63\x4b\xac\xb8\xd8\xea\xb7\xe3\xf3\x96\x70\xc3\x93\x4a\x2d\x3c\x1b\x15\x25\x17\xea\x3d\xc9\x35\x42\xa1\xbd\xa9\x7d\x56\xf7\xdc\x87\xeb\x5e\x65\x7a\xfb\x65\xae\xe9\xcc\x1e\x44\xfd\xb9\xc4\x2e\xae\xfb\xf5\xa6\x7f\x4e\x38\x93\xa6\x73\x23\x4b\x59\x7f\x22\xb1\xcd\xb3\xbb\xef\x20\xe3\x05\xfe\x55\xe0\x9c\x72\xf6\x73\x3d\x44\x4d\xec\xaf\xcf\x7f\x19\x2c\x28\x2e\x07\x3f\xfd\xda\xe8\xfa\x5c\xcf\x68\xce\x14\xd5\xf9\xac\xff\x30\xb9\xe9\xf5\xfe\x13\x00\x00\xff\xff\x24\x22\xdf\x92\x33\x20\x00\x00")

func assetsPipelineYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPipelineYml,
		"assets/pipeline.yml",
	)
}

func assetsPipelineYml() (*asset, error) {
	bytes, err := assetsPipelineYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pipeline.yml", size: 8243, mode: os.FileMode(420), modTime: time.Unix(1485885494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRepoYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x53\x51\x4f\xdb\x4c\x10\x7c\xf7\xaf\x58\x10\x12\x12\x92\x83\xf9\x5e\xbe\x72\x6f\x6e\x08\x08\x89\xb6\x96\x9d\xc0\xf3\x72\xde\x24\xa7\x9c\xef\xac\xbd\x75\xd3\x14\xe5\xbf\x57\x3e\x42\xea\xd4\xad\x9f\xac\x99\xd9\xb9\xf5\x78\x2e\x4d\xd3\x24\x7f\xa9\xe6\xd4\xb4\x16\x85\xee\x3d\x37\x28\xcf\xc4\xc1\x78\xa7\xe0\xf2\xbf\xec\x26\x4b\xb3\xdb\x34\xbb\xbd\x4c\xee\x28\x68\x36\xad\x44\xe6\xcb\x02\x98\x5a\x1f\x8c\x78\xde\x81\x71\x30\x9b\x96\x20\x1e\x82\x78\x26\xa8\xbd\xde\x10\x83\x69\x70\x45\x21\x29\x90\xb1\x21\x21\x0e\x2a\x01\x28\xa9\xf5\x5f\xb1\xa1\xfe\x1d\x60\xbe\x6b\x49\x41\x25\x6c\xdc\x2a\x02\x27\xa7\xf4\x5a\x70\xd8\x50\x52\x52\xf0\x1d\x6b\x8a\x16\x33\x1d\x7a\x66\xe8\x90\xbf\x54\x4a\xcd\xa6\xa5\x52\xe5\x71\xad\x48\x17\xec\x5b\x62\x31\xef\x93\xfd\xf3\x5b\x10\xd7\x80\xb3\x92\x96\xc7\xad\x46\x9a\xc2\x5b\xa3\x77\x73\xfa\x21\x1f\xf3\x00\xc3\x7c\xb2\x4f\xe9\x4d\x96\xde\xfc\x7f\x79\x64\x2b\x41\xa1\x86\xdc\x60\x20\x85\xca\xd4\x0a\x72\x6b\xfd\xb6\xe8\xc2\xba\xe8\xac\x3d\x92\x00\xb3\xe5\x92\xb4\x1c\xf8\x01\x5e\xb0\x71\xda\xb4\x68\xd5\x00\x84\xf8\xad\x70\x7e\x75\x3e\x00\xa7\xde\xd5\x26\x66\x76\xaa\x64\xf7\x64\x36\x74\x0a\x02\xe0\x36\xa8\x2a\xc6\x99\xb3\x53\x70\x56\x75\xaf\x80\xec\x54\x8f\x1b\x6c\xd4\xc5\x5b\x8c\x33\xd7\xda\x77\x4e\x1e\xeb\xbd\xea\x02\xf1\xf5\xd5\xc0\x26\xd7\x7f\x9e\x96\x02\x69\x56\x0f\x24\x77\x7e\xeb\xac\xc7\x7a\xc1\xf6\xde\xf3\x13\xee\x88\x47\xb2\xcf\x28\x7a\xfd\x40\xf2\xd8\x37\xe4\xef\xec\x74\x4d\x7a\x13\xa7\xf3\xef\x68\x2c\xbe\x1a\x6b\x64\x37\xd2\x16\xdd\x3f\x4c\x1e\x9d\x11\x83\x42\xd1\x62\xd1\xf6\x1b\x8d\x34\xef\x70\x54\x14\xc8\x32\xe2\xa7\xbe\x69\x2d\x9d\x7a\x7c\xeb\xa4\xed\xe4\x58\xe5\x05\x1f\xfe\xce\x49\x71\x17\x6c\xc1\x2f\x41\xd6\x14\xaf\x49\x14\x3c\xa3\xed\xe8\x90\xf6\x28\xe1\x49\xbd\xe1\x09\x69\x9e\x1c\x98\x92\x56\xc6\xbb\xfd\x04\x1b\xfc\xe9\x1d\x6e\xc3\x44\xfb\xe6\xfa\xe2\xed\xa3\xa7\xfb\xe4\x57\x00\x00\x00\xff\xff\x8b\xcb\x44\x1b\xba\x03\x00\x00")

func assetsRepoYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRepoYml,
		"assets/repo.yml",
	)
}

func assetsRepoYml() (*asset, error) {
	bytes, err := assetsRepoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repo.yml", size: 954, mode: os.FileMode(420), modTime: time.Unix(1485880397, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsServiceYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x5f\x6f\x1b\x37\x12\x7f\xd7\xa7\x98\x08\x07\xf8\x2e\x38\x39\xb2\x83\x3b\xc4\x7c\x93\x25\xb9\x56\x6b\x19\x82\x25\x3b\x0f\x41\x10\x50\xdc\x91\x96\x30\x97\xdc\x92\x5c\x3b\x4a\x91\xef\x5e\x90\xdc\x3f\x5c\x69\xe3\xca\x69\xfd\x64\xcd\x0c\xe7\x37\xff\x67\x76\x30\x18\xf4\x46\x1f\x97\x2b\xcc\x72\x41\x2d\x5e\x29\x9d\x51\xfb\x80\xda\x70\x25\x09\x9c\x9c\x0f\xcf\x86\x83\xe1\xc5\x60\x78\x71\xd2\x9b\xa0\x61\x9a\xe7\xd6\x73\xe6\xf7\x60\x50\x3f\x71\x86\xc0\x25\x50\x30\x39\x32\xbe\xe1\x0c\x50\x3e\x71\xad\x64\x86\xd2\x02\x53\xd2\x52\x2e\xb9\xdc\x02\x95\x30\xba\xb9\x04\x4b\xf5\x16\x2d\x6c\xb5\x2a\x72\x78\xe6\x36\x85\xe9\x78\x59\x6b\xa2\x32\x01\x4b\xcd\x23\x24\xb8\xe1\x92\x3b\xa4\xde\x82\x6a\x9a\xa1\x45\x6d\x48\x0f\x60\x19\x24\x6f\x69\x86\xee\x27\xc0\x6a\x97\x23\x81\xa5\xd5\x5c\x6e\x3d\xa1\x65\xa5\x93\x03\xb5\xa9\x00\x7a\x00\xb3\x8c\x6e\xf1\x5e\x8b\x63\x5e\x4f\x14\x7b\x44\x1d\x9e\xc0\xfd\xdd\x4d\x83\xbf\x50\xda\x1e\xa3\xc1\xc9\x01\x7e\xcd\x95\xc1\xc4\xc5\xa9\xb1\xc3\x09\x6e\x68\x21\x2c\x81\x93\x0f\xc3\x0f\xc3\x93\x46\xf9\x35\x52\x61\xd3\xa9\x4c\x72\xc5\xe5\x51\x30\x95\x2c\x58\x05\x16\x8d\xad\x03\x9a\x7a\x55\x7b\x70\xef\x02\x35\x42\x1c\xe7\xc5\x31\x30\xe3\xc5\x3d\x14\x92\x5b\xe3\x70\x34\x3a\x10\x84\x8d\xd2\x55\x9e\x51\xef\x21\x9d\xc5\x6e\xcd\x31\x53\x7a\x77\x0c\x4e\x90\x74\x20\x54\x08\xc5\xa8\x45\xf7\xbf\x03\xe1\x54\xa2\x86\x7f\x73\x09\x73\x7e\xf9\x9f\x3d\xb4\xf7\xc3\x18\x6e\x82\x86\x6b\x4c\xc6\xaa\x68\xc7\xf0\xb6\xc8\xd6\x07\x86\x9e\x9f\x74\xd4\x8e\x17\x74\xd5\x53\xbb\xe7\x1d\x17\xb4\x90\x2c\x75\xd9\xdc\xa9\x42\xc7\xf5\x7b\xda\x03\x58\x50\x9b\x2e\xa8\xb5\xa8\x65\x8c\x3a\x56\x59\x46\x27\x28\x78\xc6\x2d\x26\x37\xdc\xd8\x43\x40\x47\x75\x70\x39\xb5\x69\x08\xb1\x2a\x82\xeb\x36\xc5\x18\x23\xb6\xdc\x19\xee\x1e\xa2\x44\x7d\x57\x08\x5c\x68\xae\x34\xb7\xbb\x1f\xba\x1c\x01\xae\x52\x84\xbc\x94\x77\xc0\x0e\x46\x17\x02\x61\x8d\xbe\x65\x93\x04\x93\x0a\x5e\x94\x18\x6d\xf8\xb3\x1e\xc0\x43\xce\x66\xc9\x6b\x9a\xd1\xa9\x7b\xa2\xa2\xf0\xae\xf1\x2c\x77\x3d\xe2\xaa\xc8\xd1\xbd\xb2\x1e\xc0\x94\x99\xb1\x28\x8c\x45\xfd\x4f\x68\x9e\x32\x03\xa5\x3a\xc7\x49\x30\x17\xca\xd5\xd7\x69\x40\x9a\x8a\x75\x15\xc2\x51\x3b\x6d\x7f\xc7\x95\x91\x96\x95\xc8\xf4\xe6\xb2\x0e\xa0\x2f\x6b\x6b\x29\x4b\x3d\xab\x35\x10\x9d\x45\x63\x25\x13\x3f\xf9\xfc\xbc\xbb\xa6\xe6\xa0\xa2\xfa\x57\x92\x90\x5b\x65\xfb\xe1\x27\xc0\x20\x90\xa6\xbf\x17\x54\x98\x9a\x5a\xd3\x7f\x55\x5c\xf6\x09\x7c\x82\x7e\xff\xbf\xf0\xe6\x0e\x37\x71\x91\x7e\x8e\xa5\xfb\xbd\x3b\x34\xaa\xd0\x0c\x3d\xf8\x94\x99\xb2\x99\xe2\x98\x8c\x3e\x2e\x09\x99\x8e\x97\x84\x2c\xa3\x69\xb6\xd0\x2a\x47\x6d\x79\x78\xe9\xfe\x5a\xf9\x73\x7f\xce\x96\x99\x8f\xd1\x83\x0b\x19\x81\x37\xcb\x62\x0d\xff\xfa\xa3\xc9\xf5\xf7\x52\xb6\xd5\xbb\xc1\xe4\x8e\xae\xae\x85\x5d\x36\xdd\xbe\x19\x2b\xb9\xe1\xdb\x42\x53\x9f\xa4\x1a\x77\x4e\xbf\xf2\xac\xc8\x16\xa8\x19\x3a\x7d\x67\xc3\x61\xc3\xe3\xd2\xf1\xc2\xc8\xdd\xd5\x22\x95\xc0\x8d\xa2\xc9\x25\x15\x54\xb2\x72\xff\x54\xa1\xf2\xbe\x6c\x1a\x8a\xa3\xb5\x73\xd5\x62\x8d\xab\x09\xe2\x17\x57\xcb\x23\x47\x89\x64\xa1\x91\xf5\x4b\xa6\x25\xeb\x28\x2d\xd9\x95\xaf\x9e\x5f\x5c\xf1\xb8\xca\x0d\xc2\xa1\xa2\x23\x56\xcb\x14\x2f\xe2\x73\x78\xab\x7c\x1e\x4a\xee\x9d\x12\xb8\x97\xab\xe3\xfd\xab\x70\x4b\x3b\x9d\xae\xa3\x40\x57\xd4\x3c\x4e\xea\x5d\x5f\xda\x3f\xe7\x4c\xab\x72\xdc\xb5\x05\x5a\x35\xd9\x18\x1c\xd5\xe5\x6c\x34\x27\xa4\x86\xaf\x7b\x89\x74\x19\x7f\x58\xb2\x23\x63\x8a\xcc\x2b\x5e\x28\xc1\xd9\x6e\xa2\x58\xe1\x0a\xab\x89\xc3\xd2\x52\x8b\x6d\xd2\x00\xa6\x9b\x0d\x32\x4b\x60\x24\x84\x7a\x8e\xfc\x5e\x68\x2e\x19\xcf\xa9\x20\xad\xa4\xb5\x7a\xaa\xd1\x82\xcc\x9c\xd2\x8c\x7e\x53\x92\x3e\x9b\x53\xa6\xb2\x88\x3f\x62\xed\x92\x76\xf2\xc6\x1a\xd2\x18\x5c\xb2\x9c\x8f\x04\xfa\xef\xfa\xd5\x6f\xe7\x47\xe4\xe1\x20\x50\x76\xa1\x0e\x91\x99\x41\x7c\x92\xd4\x2f\x3a\x3c\xef\xf4\xfd\x25\xef\xbb\xac\x0e\x7e\x9e\x93\x51\x61\x53\xa5\xf9\x37\x5c\x22\x2b\xdc\xfa\xf1\x75\x3a\x93\x5b\x8d\xc6\x74\xc8\x87\xe1\xbb\xc6\xb7\xfb\x3c\x41\x8d\xe5\x4c\x28\x9a\xac\x7d\x9b\x72\xb9\x25\x13\xd4\xb8\x75\xd3\x56\xcf\xa4\xb1\xae\x77\xcd\x95\x56\x59\xdc\xcb\xc7\xa9\x79\x05\xe6\xdd\x3e\xe2\x47\x6e\xd3\xd7\x23\x56\x86\x87\xe6\x3d\x88\xc4\x4b\x66\x46\xfd\xfe\x13\xef\xae\x9b\x43\xf1\x48\x4f\xbb\x4c\xac\xb6\x07\x81\xfe\x5b\x57\x81\x3f\xee\xe4\xee\x85\x72\xd0\xed\x9d\x7b\xa5\x9a\x8f\x8d\x64\x54\xde\x7f\x31\x60\xdd\xa5\xdb\xe2\x8e\xf3\xa2\x66\x4e\x8d\x41\x77\x63\x0a\x02\x27\x56\x17\x78\x52\x73\xfc\x27\x40\xf9\xb0\xfa\x82\x68\x76\x48\x38\x6c\x5b\x6a\x03\x2d\x6a\x2a\x6d\xe7\x34\xcf\xb9\xdc\xb6\xd6\xc8\xb5\x32\x36\x8c\xf9\x61\x14\xc8\xe3\x36\xc0\x83\x12\x45\x86\x86\xc0\xa7\xcf\x07\x67\x8c\xbb\x04\x0f\x43\x1c\xd2\xd9\x54\x25\x97\xdb\x87\x73\x42\xe2\x47\x3f\x37\x36\xd9\x5e\x12\x02\xe8\x46\xe9\x67\xaa\x93\xda\xb1\x57\x2d\xab\xf6\x19\x14\xd4\x5e\x71\x14\x09\xf1\xf7\xf1\x20\xdf\xdb\x42\x7e\xab\x18\x72\x70\xdf\x54\x8b\x7c\xff\xbe\x83\x97\x0f\x92\xf6\x49\x58\xdd\x25\xf5\x71\x1d\x60\xba\xee\xee\x3a\x15\x91\x4b\x47\x67\x62\x3f\x0c\xaf\x4d\x44\xe8\xe2\x71\x8a\xec\x71\x26\x2d\xea\x27\x2a\x96\xc8\x94\x4c\x0c\x81\xff\x1d\xca\x84\x65\x11\x97\x57\xfb\xd3\xb3\xe3\x85\x56\x56\x31\x25\x08\x5c\xaf\x56\x8b\x43\xfe\x8a\x67\xa8\x0a\x5b\x83\xbe\x6f\x89\xec\x56\xa9\x46\x93\x2a\x51\x5d\x76\xe7\x25\x7b\x4e\x2d\x4b\xe3\x53\xf1\xda\xda\x7c\xac\x12\x24\x70\x3e\x1c\x0e\xce\x2f\x2e\x7a\x4d\x1f\xfd\xb0\x21\x3a\x8d\x8b\x8b\xce\x5a\xcd\xd7\x85\x8d\xb7\xe1\x6f\xb8\x23\x90\x94\x73\x37\x1c\x8e\x5f\x12\x14\x74\x77\x6a\x83\x2b\x5f\x4c\xf0\xa5\x5d\x68\x04\xfe\x5f\x35\xec\xbd\x4c\xbb\x9d\xab\x02\x1e\x7d\x1f\xbd\x54\x74\x5e\xec\x7b\xef\xcf\x00\x00\x00\xff\xff\x0a\xb7\x21\x57\x90\x11\x00\x00")

func assetsServiceYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsServiceYml,
		"assets/service.yml",
	)
}

func assetsServiceYml() (*asset, error) {
	bytes, err := assetsServiceYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/service.yml", size: 4496, mode: os.FileMode(420), modTime: time.Unix(1485880472, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVpcTargetYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x51\x4d\x0f\xd3\x30\x0c\xbd\xf7\x57\x98\x09\xa9\x17\x2a\x15\x6e\xcb\x6d\xea\x98\x18\xe2\x63\x5a\x47\x77\x76\x1b\xaf\x8b\x68\x3e\x94\x38\x68\x13\xe2\xbf\xa3\xa4\x1b\x1a\x13\x02\x71\xb3\xfd\xde\xf3\x7b\x71\xaa\xaa\x2a\x56\xc7\xf6\x40\xda\x4d\xc8\xb4\xb1\x5e\x23\x77\xe4\x83\xb2\x46\x40\xf9\xa6\x7e\x5d\x57\xf5\xb2\xaa\x97\x65\xb1\xa6\x30\x78\xe5\x38\x23\x1f\xbf\x40\xb7\x6b\x80\xd1\x8f\xc4\xca\x8c\x80\x06\xe8\xa2\x42\xae\x13\x82\x46\x42\x88\xbd\x21\x0e\xc0\x67\x64\x40\x4f\x60\x2c\x83\x46\x83\x23\x49\xe8\xaf\xa0\x63\xb1\x43\x8f\x9a\x98\x7c\x10\x05\x40\xe7\x86\xad\x4c\x05\xc0\x6f\x6e\xd9\xca\xde\xdc\x32\x7c\xb8\x3a\x12\xd0\xb2\x57\x66\x2c\x00\x76\xb1\x9f\xd4\xd0\x66\xbf\xad\x0c\x7f\x58\x31\x63\xa0\x64\x78\xd0\x37\x56\x6b\x5c\xd3\xa4\xb4\x62\x92\x1f\x54\xe0\x62\x4f\xc1\x46\x3f\x50\xde\x71\x44\xc5\xef\xd0\xc8\x89\xc4\x83\x6a\xb1\x3a\xb6\x42\x34\x93\x8d\x72\xbe\x57\x32\x10\x89\xdb\x58\x23\x55\x6a\x67\xd1\xa2\xf8\x1c\xd9\x45\xfe\xeb\xdb\x0e\x67\x02\x25\xc1\x9e\x80\xcf\x04\xdf\xdc\x90\x29\x1d\x4e\x91\x04\xbc\xd8\xd3\x69\x56\xe6\xe9\xdb\x8b\xb3\x9e\xe7\x25\x00\x9f\x50\x27\x4a\x1b\x7b\x78\xf9\x3d\x67\x6a\x19\x87\xaf\x69\xfc\xa3\xba\x8b\xfe\x7d\x99\x14\xc0\x65\xd6\xed\xc3\xee\x37\x9a\x33\xdc\xcc\x36\x46\x88\xf7\x56\x99\x7b\x5f\x41\xf9\xaa\xfc\x55\xe7\x9c\x4f\x56\xff\x9b\xf8\x59\xfe\x33\x00\x00\xff\xff\x22\x5d\xc9\xe1\x9b\x02\x00\x00")

func assetsVpcTargetYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsVpcTargetYml,
		"assets/vpc-target.yml",
	)
}

func assetsVpcTargetYml() (*asset, error) {
	bytes, err := assetsVpcTargetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vpc-target.yml", size: 667, mode: os.FileMode(420), modTime: time.Unix(1485880541, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVpcYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x98\xdf\x6f\xdb\x36\x10\xc7\xdf\xf3\x57\x5c\x83\x01\x5a\x81\x38\xb5\xa5\xa6\x68\xf9\xe6\x39\x4e\xe3\xad\x4d\x0c\xcb\x73\x81\x36\x7b\xa0\xa5\xb3\x2d\x54\x22\x35\x92\x6a\x62\x14\xfd\xdf\x07\x51\x92\x7f\xd0\x92\xe3\x5f\xf5\x5c\xe4\x25\x26\x8f\xbc\xfb\x7e\x74\xe4\x9d\x54\xab\xd5\xce\x9a\x9f\xdc\x3e\x46\x71\x48\x15\xde\x70\x11\x51\x35\x40\x21\x03\xce\x08\x58\x76\xbd\x51\xaf\xd5\xdf\xd5\xea\xef\xac\xb3\x6b\x94\x9e\x08\x62\xa5\x67\x3e\xfe\x0d\x83\x6e\x0b\x1e\x03\x35\x01\x86\xea\x91\x8b\xaf\x20\x50\xf2\x44\x78\x28\x21\xa2\x8c\x8e\xd1\x87\xe1\x14\xa2\xe4\xac\x4b\x05\x8d\x50\xa1\x90\xe4\x0c\xa0\xc3\xa4\xa2\xcc\xc3\x3e\x32\xca\xbc\x69\x3a\x04\xb0\xb4\x77\x61\x01\x2a\x33\x01\xc5\x21\x91\x08\x23\x2e\x52\xa7\x7a\x41\x7f\x1a\x23\x01\x57\x89\x80\x8d\xf5\x40\x33\x0c\xf9\x23\xfa\x03\x1a\x26\x28\xb3\x4d\x6b\xe0\xe3\x88\x26\xa1\x9a\xfd\xf2\x03\x8f\x2a\xf4\x73\x97\x7a\x8e\x2c\x18\xb9\x72\xa2\xb7\x29\x89\xc9\x4d\x86\x0c\x15\x8c\x04\x8f\xe0\x71\x12\x78\x93\x34\x28\x9a\x1a\x83\xeb\xde\x02\xf5\x3c\x94\xf2\xb2\x3c\xb4\x8f\x01\xfb\x80\x6c\xac\x26\x04\xac\x77\x56\x36\x44\x9f\x66\x43\x8d\xb7\xd6\x72\x40\xf5\x4b\xfd\xf7\xaa\xbe\x28\xac\x4b\x95\x42\xc1\x08\x9c\xff\xfe\xf0\xe0\x7f\x6f\x5c\x38\x3f\x5e\x3e\x3c\x5c\x6e\xf2\xe3\x55\xfe\xaf\xfd\xe3\xe5\xb9\xde\xb2\xc5\x99\x54\x82\x06\x4c\x2d\x69\xb4\xa2\x44\x2a\x18\x22\x50\xf8\x46\xc3\xc0\x87\x56\xe7\xba\x07\xc3\x90\x7b\x5f\x09\x3c\x5d\xea\xbf\x57\x4f\x97\x69\xb4\x83\xd8\x6b\x05\xbe\xf8\x43\xcf\x55\xd2\xd2\x4b\xd7\x3f\xb6\x6d\xd9\x34\x0a\x38\x8d\x37\xa7\x4b\xa7\x9b\x0c\xc3\xc0\xcb\x20\x34\x3f\x37\xb6\x22\xd5\xfc\xdc\x38\x30\x29\xfb\xf5\xaf\x42\xca\xde\x92\x94\x7d\x40\x52\x8d\x5f\x8a\x94\xb3\x25\x29\xe7\x80\xa4\xec\x93\x26\xd5\xe2\xcc\x0f\xd2\x35\xba\x08\xdc\x52\x69\x1c\xc6\x8c\xd7\xf9\x0d\x23\xe4\x8e\xab\xf3\xec\x67\x5a\x1d\xf4\x50\xfb\xdf\x84\x86\xf2\x9c\xc0\x97\x17\x3d\x1c\x55\x1e\xe4\x0b\xb0\xac\x7f\xca\xb6\xb7\xf7\xd8\xde\x7e\x7e\x7b\x67\x8f\xed\x1d\x63\xfb\x5e\x51\xad\xd3\x4d\x06\xdd\x16\x59\x48\x91\xe6\x27\x97\x90\x76\xcb\x26\xa4\xb8\xb8\xbb\x82\xc7\x28\x54\x50\xd4\x56\x80\x79\x06\x82\xf6\xb6\x58\x12\x72\x93\x36\xa3\xc3\x10\xaf\x99\x74\x93\x38\xe6\x42\x11\xb0\x94\x48\xd0\x32\xa7\x6f\xb9\x54\x8c\x46\x28\x0d\x03\xb3\x55\xc8\x1c\x19\xa3\xb9\x6d\x9f\x8e\xe5\x1c\xc7\x5f\x38\x25\x70\x47\x23\xcc\x47\x00\x74\x63\x40\xe0\x85\x9b\x0c\xe1\xb7\xef\x5a\xa0\xab\xa8\xf7\x35\x35\xfa\xb1\x7a\x67\x97\xd3\xc8\xa6\x8b\x3c\xcd\xf2\x8c\x94\x24\x59\x05\xb2\x41\xec\x75\xfc\x02\x57\x0e\x76\x15\x64\x55\xd2\xe5\xe6\x1f\x69\x9c\x59\x74\xe2\x7b\xf6\x81\x26\xcc\x9b\x10\x48\xa9\xe5\xf3\xcd\x6f\x34\x08\xe9\x30\x08\x03\x35\xfd\xcc\x99\xd6\x8c\x21\x7a\x0a\xbe\x40\xfd\x02\x5e\xbc\x4f\x77\x95\x79\x86\x55\x91\xcb\x3a\x3a\x13\x5e\xe6\x77\x57\xc8\xb5\x58\x2f\xaf\x35\x56\xef\xfd\xbd\x68\xdb\x07\xa4\x6d\x1f\x92\x76\xe3\x14\x68\xdb\xab\xb5\x63\x2f\xda\xce\x01\x69\x3b\x87\xa4\x6d\x9f\x02\x6d\x47\xbf\xe0\xa4\xc5\x10\xd5\x7b\xaa\xf0\x91\x4e\xcb\x69\x1b\x46\x15\x50\x8f\x15\x7e\x56\x01\x36\x0a\x7c\xd0\x6d\xe5\xf3\x4d\xa5\xa8\x37\x89\x90\xa9\xad\x52\xc2\xf0\x32\xb3\x58\x25\x92\x69\xea\xf1\x44\x61\x3f\xad\x14\xe5\x01\xcd\xe7\xb7\x0a\xe3\xc8\x99\xb1\x2c\x67\x8d\x92\xbc\xe1\x8a\x91\xf9\xf2\x9e\x91\x92\xe7\x52\x21\x73\xce\x61\xa6\xd6\x04\x98\x5b\x5e\xa3\x54\x01\xa3\xe9\x01\x5f\x38\x9f\xcb\x6f\x9d\x00\x9b\x3e\x9f\x59\xa1\x9a\xfb\x69\x4a\xc9\xbd\x40\x3b\x58\x77\xd7\x94\x2e\xd8\xb9\xb8\x66\xf3\x86\xf6\xe5\x45\x9b\x42\x32\x6a\xc2\x91\x84\x55\xd5\xb1\xb5\xc2\xec\x3d\x84\x39\x47\x12\x56\x55\x32\xd6\x0a\x73\x76\x10\x96\x1f\xe0\xa6\x17\x96\x8b\x98\xcf\x9f\xf8\x55\xd1\x61\x43\x9e\x30\xbf\x1d\x4f\x30\x42\x41\xc3\x2e\x17\xca\x94\xd8\x66\x4a\x54\xdc\xd1\x86\x51\x85\xd8\xb9\x95\x41\xd6\xc0\x04\xd0\x4b\x42\xbc\x4b\xa2\x21\x8a\xf4\xa5\xb0\xee\x14\xfd\x79\x57\x70\xc5\x3d\x1e\x12\xb0\xde\x58\x0b\xb6\x4d\x2f\xcb\x04\xfd\x7d\xac\x68\xf6\xc7\x02\x65\xda\xe0\x8f\x68\x28\x67\x1d\xfe\x9a\xfb\x27\xd5\xdc\xa3\x6c\x8c\x64\x46\xef\x46\xf0\x48\x47\x60\xbf\xb6\x66\x83\x7d\x9e\xba\xbf\xba\x72\xae\xac\x39\x39\xd7\xbd\x3d\x1d\x5e\xaf\x7f\x0a\x2f\x1d\x40\xf1\xc5\xf2\x59\x66\xb6\x6d\x10\xcb\x06\x72\x5c\xb7\x4a\xc5\xa7\xc3\xeb\xea\x7f\xce\xaf\xb7\x75\x83\x55\x36\x70\x9f\x28\x0d\xeb\x74\x40\xd5\xf7\x02\xb5\xf8\xa6\xbd\x13\x27\x13\xd3\xec\x10\x1a\xb5\xd7\x14\xb3\x61\xb1\x29\x5d\xf0\x73\xdb\x83\xcd\x9e\x84\x51\x81\x8f\x2a\x6f\xaf\x26\x61\x17\x79\xce\x51\xe5\xed\xd5\x2a\x6c\x22\xef\x3e\x51\x71\xa2\xb2\x6f\x5e\xba\xd8\xe7\xfd\xf6\xc2\xa7\xc6\xfe\x04\x21\xf0\x81\x8f\x40\x4d\x10\xbe\xc5\x59\x3d\x2f\x2a\xf7\x62\x6b\xd0\x7e\xd2\x5f\xb5\x0a\xf7\x34\xaa\x2e\xed\xda\x99\x01\xb7\xe3\xcb\x0a\xf7\x59\x23\x00\x52\x9b\x05\xbe\x5c\x88\x20\x77\x76\xc3\x08\xf9\x93\x07\x6c\x7e\x28\x6b\x60\x5d\xcc\x0f\x64\x6d\xf6\x5f\x3a\x93\x5a\x77\x46\x64\x61\x2c\x1d\xad\x38\x3b\x73\x83\x35\x27\x65\xc9\x44\x8b\xbd\xe3\x3a\xc0\x5d\xfc\xda\xcf\xfb\x2d\x35\xd9\xd7\xaf\xf3\xbc\xdf\x52\x93\x15\xbf\x5b\x24\x82\x91\x00\x67\x67\xff\x05\x00\x00\xff\xff\x38\x18\x5a\x8f\x82\x1d\x00\x00")

func assetsVpcYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsVpcYml,
		"assets/vpc.yml",
	)
}

func assetsVpcYml() (*asset, error) {
	bytes, err := assetsVpcYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vpc.yml", size: 7554, mode: os.FileMode(420), modTime: time.Unix(1485880503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/bucket.yml": assetsBucketYml,
	"assets/cluster.yml": assetsClusterYml,
	"assets/pipeline.yml": assetsPipelineYml,
	"assets/repo.yml": assetsRepoYml,
	"assets/service.yml": assetsServiceYml,
	"assets/vpc-target.yml": assetsVpcTargetYml,
	"assets/vpc.yml": assetsVpcYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"bucket.yml": &bintree{assetsBucketYml, map[string]*bintree{}},
		"cluster.yml": &bintree{assetsClusterYml, map[string]*bintree{}},
		"pipeline.yml": &bintree{assetsPipelineYml, map[string]*bintree{}},
		"repo.yml": &bintree{assetsRepoYml, map[string]*bintree{}},
		"service.yml": &bintree{assetsServiceYml, map[string]*bintree{}},
		"vpc-target.yml": &bintree{assetsVpcTargetYml, map[string]*bintree{}},
		"vpc.yml": &bintree{assetsVpcYml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

