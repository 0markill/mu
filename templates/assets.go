// Code generated by go-bindata.
// sources:
// assets/bucket.yml
// assets/cluster.yml
// assets/pipeline.yml
// assets/repo.yml
// assets/service.yml
// assets/vpc-target.yml
// assets/vpc.yml
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsBucketYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\xc1\x4a\x03\x31\x10\x86\xef\x79\x8a\x11\x0a\x3d\x05\x56\x3d\x35\xb7\x15\x15\xbc\xe8\xb2\x5b\xda\x73\xba\xce\xd6\xe0\x26\x13\x66\x27\x50\x29\x7d\x77\xd9\x2c\x95\xa8\xb9\x4d\xfe\x99\x8f\xef\xd7\x5a\xab\x7a\xdf\x6d\xd1\xc7\xd1\x0a\x3e\x13\x7b\x2b\x3b\xe4\xc9\x51\x30\xb0\xbe\xab\x6e\x2b\x5d\x6d\x74\xb5\x59\xab\xc6\xb2\xf5\x28\xc8\x93\x51\x00\x0f\xa9\xff\x44\x69\x18\x07\x77\x9a\x67\x80\xed\x57\x44\x03\x9d\xb0\x0b\xc7\xfc\xf1\x88\x53\xcf\x2e\x4a\x46\x2d\x9b\x20\x04\x69\x42\x18\x88\x41\x3e\x10\x0e\x99\x02\xc1\x7a\x54\x2d\x4e\x94\xb8\xc7\x02\x5f\x82\xeb\x7d\x67\x4c\x77\x6f\xcc\x12\xe5\xa4\x61\x8a\xc8\xe2\x96\x9b\xf9\x2d\xe1\xab\xf5\x68\xe0\xa6\x4b\x07\x58\x9d\x4b\xd3\x8b\x5e\x9d\x33\xa8\xc5\xa3\xa3\xf0\x33\xd6\x7d\x4f\x29\xc8\xcb\xfb\x45\xbd\x25\x89\x49\xfe\x49\xfc\x2a\x33\xf3\x81\x86\x5c\x21\xba\x88\xa3\x0b\xd7\x2e\x79\x79\x67\xc7\x34\x0b\xb4\x38\x40\xa1\xfb\x74\x8a\xc4\x72\x55\x2d\x24\x7d\xd2\xcb\xb5\xfe\xa3\xab\xbe\x03\x00\x00\xff\xff\xd1\xec\xe0\x99\xa0\x01\x00\x00")

func assetsBucketYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsBucketYml,
		"assets/bucket.yml",
	)
}

func assetsBucketYml() (*asset, error) {
	bytes, err := assetsBucketYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/bucket.yml", size: 416, mode: os.FileMode(420), modTime: time.Unix(1485847254, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsClusterYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x1a\xfd\x6f\xdb\x36\xf6\x77\xff\x15\xaf\xbe\x1e\xbc\x0d\x95\xed\xa4\xeb\xb0\x09\xd7\x0d\x8e\xe3\xb5\xc6\x9c\xd6\x88\xdd\x16\xb8\xb6\x28\x68\xe9\xd9\xe6\x55\x22\x75\x24\x95\xc4\xeb\xe5\x7f\x3f\x90\xd4\x07\x29\xc9\x59\x5a\x6c\x77\xb7\x73\x60\xd4\x7a\x7c\x7c\xdf\x5f\xa4\x1a\x04\x41\x6f\xf2\x66\xb5\xc6\x34\x4b\x88\xc2\x9f\xb9\x48\x89\x7a\x8d\x42\x52\xce\x42\x18\x9c\x8e\x4f\xc6\xc1\xf8\x87\x60\xfc\xc3\xa0\xb7\x24\x82\xa4\xa8\x50\xc8\xb0\x07\x30\x67\x52\x11\x16\xe1\xfa\x90\xa1\x7e\x06\x30\xbf\x60\xa5\x04\x65\x3b\x03\x38\x47\x19\x09\x9a\x29\x43\xaa\xc4\x07\x75\xc8\x10\x14\x87\x5c\xe2\xb0\x40\xdb\x92\x3c\x51\x21\xa8\xd3\x61\x4a\x23\xc1\x7b\x66\x2b\x15\x18\x4f\x49\x46\x22\xaa\x0e\x2e\x83\x17\x79\xba\x41\xe1\xef\x1c\x9c\x0c\xda\x1c\x2d\x22\xf0\x2d\xd0\x82\xb7\xd4\x7c\x13\x92\xb3\x68\x0f\x94\xc1\x81\xe7\x02\x66\xd3\x15\x44\x49\x2e\x95\xa1\x79\x41\x6e\x56\xf4\x57\xfc\x4d\x7e\xa7\x1d\xfc\x2e\xc8\x0d\x4d\xf3\x14\x58\x17\xdf\x3d\x51\x10\x11\x06\x1b\x2c\x04\xc0\xf8\x88\x08\xbf\xe0\xe1\x05\x49\xef\x65\xd3\x02\x55\x6b\x45\xa4\xe4\x11\x25\x0a\xe1\x9a\xaa\x3d\x5c\x73\xf1\x11\x45\x2d\xc0\x10\x60\x81\xe4\x0a\x61\x93\x10\xf6\x51\x6f\x88\xa9\x24\x9b\x04\x61\xb5\x7a\x0e\x24\x8a\x50\xca\x86\x37\x06\x5a\xc5\x95\xdc\x4f\x92\x84\x5f\x87\x6d\xe6\xab\x7c\xc3\x50\xc1\x56\xf0\x14\xae\xf7\x34\xda\x1b\x31\x34\x72\x8b\x66\x4b\x8b\x0b\xca\x16\xc8\x76\x6a\x1f\xc2\xe0\x07\x6b\xca\x0b\x72\x53\x81\x4e\xbe\x1f\xf8\xb2\x8c\x87\xe6\x6f\x34\x36\x60\x23\x11\xc6\x4b\xa2\x14\x0a\x16\x42\xff\xab\x77\xef\xe2\x4f\x27\x8f\x1e\xdf\x7e\xfd\xee\xdd\xf0\x3e\x0f\xa3\xe2\xe7\xe9\xed\xd7\x7d\x43\x72\xca\x99\x54\x82\x50\xa6\x3c\x1d\x07\x69\x2e\x95\xf6\x19\x81\x2b\x92\xd0\x18\xa6\xf3\xf3\x4b\xd8\x24\x3c\xfa\x18\xc2\xcd\xd0\xfc\x8d\x6e\x86\xc6\x52\x11\x49\xf0\x65\xae\xd6\x7b\x81\x72\xcf\x93\xb8\xc3\x64\xd5\x1a\x10\x55\xd8\x8c\x80\xd4\x1b\x81\xe7\x0a\xf0\x0a\x99\x82\x6b\x9a\x24\x9a\x25\x65\x54\x69\x87\xc6\xbf\x15\x8b\xdf\x8f\x2b\xfe\x73\xf6\x85\xec\x29\xfb\x52\xee\x8f\x0d\xf7\x79\x4a\x76\x38\xef\x62\xaa\x83\x7b\x72\x31\xaf\x33\xef\x58\x5c\xbb\x61\xf7\x3a\x8b\x4a\x62\x77\x67\x80\x09\x7f\xbe\x05\xb5\x47\xed\xa1\xdc\xe4\x02\x4d\x33\x2e\x14\x6c\xb9\x30\x70\x43\xac\x07\xb0\xcc\x37\x09\x8d\x6c\xd8\xce\x63\xf9\x7b\x91\x97\x36\x0f\x68\x2c\x7b\x17\xa8\x48\x4c\x14\xd1\xa4\x27\x6f\x56\x61\x38\x4d\x78\x1e\xdb\x9a\xaa\xe9\x85\x73\xa6\x50\x6c\x49\x54\x64\x77\x55\x51\x9f\x09\x9e\x67\x85\x44\x00\x01\x2c\xc8\x06\x93\xf2\x51\x7f\xe2\xd2\x3c\xfd\xaa\x8e\x4e\x39\xdb\xd2\x5d\x2e\x0c\xe9\x7e\x85\xeb\x57\xe9\xf2\x13\x78\xf5\xda\x5b\x28\x8a\x88\x07\x2b\xd3\xfe\x3e\x02\x4d\x72\xc5\x4d\xf4\x51\xb6\xfb\x5c\xa1\x1a\x65\xde\x5b\x2b\x4a\xb1\x6f\x28\x23\x47\x45\xa4\xdd\x83\x8e\xd8\xaa\xec\x39\x36\x02\x7f\x2a\x05\xf3\x4a\xad\xbf\xf5\x17\x3c\xe8\x0d\x3b\x41\x98\x72\xea\x19\x7c\x65\x0b\xa8\x76\x3e\xe3\x0c\xbf\xae\x68\xf9\x95\xd2\x27\x56\x57\x8d\x2e\x9a\x15\x89\xce\xa6\xe7\x53\x2a\x50\xdc\x96\x51\x15\x79\x88\x78\xce\x54\x45\xcd\x6b\x65\x3e\x95\xb2\x53\xdd\x49\x65\xca\x59\x4c\xb5\x1b\x8d\xb9\x9f\x13\xe9\x59\xab\xff\x33\x0b\xc3\x17\x5c\xf5\xeb\xa0\x35\xa0\xd9\x3f\x73\x92\xc8\x7e\x08\x6f\x1f\x5c\xe2\xb6\xb4\xf0\x23\x18\x0c\xde\xf7\x2e\x51\xf2\x5c\x44\x68\x08\xce\x22\x39\xb5\xac\xdd\x44\x34\x59\x33\x9b\x9a\xd4\x29\x1b\xe2\x6c\xba\xd2\x31\x56\x84\x98\x49\x95\xd6\x16\x07\xc1\x7b\x30\xd8\x45\x5e\x67\xc8\x62\xf9\x92\x85\xf0\xf6\xbd\x0d\x2a\xc1\x33\x14\x8a\x62\x15\x4f\xaf\x97\xd3\xbf\x73\x86\xf3\x18\x99\xa2\x5b\x5a\x8a\xa6\x3f\x5a\xb7\x55\x96\x50\x55\x83\x02\xe8\x3f\xea\x3b\x4f\x1a\x65\x6e\x6a\xc3\x6b\x5d\x2a\x42\x78\xb0\xca\x37\xf0\xf0\x53\xa3\xee\xdc\x16\x5b\x16\x26\x16\xbd\x84\x31\xe6\x05\x63\xb8\x29\x67\x8a\x50\x86\xa2\x8c\x61\x59\xba\x95\x32\xe3\xd6\x6a\xe6\xa9\x3d\x6d\x77\xba\x79\xd3\x8e\x29\x8b\xd3\x9d\x77\x6b\xb2\x73\x6a\xd0\x2f\x78\xb0\x05\xb0\x52\xb1\x54\x4b\x53\x30\x56\x5f\x29\x12\x7d\xf4\x50\xb4\x4d\xc9\x8e\x28\x9c\x28\xab\x5f\x08\x4a\xe4\x76\x7d\x2a\xd0\x68\xb9\xe4\x09\x8d\xaa\xe8\x2e\x83\x62\x45\x77\x8c\x38\x25\x66\x4d\x53\xe4\xb9\x0a\x61\xb9\x3e\x79\x72\x61\xc0\xaf\xb2\x98\x28\xf4\xb7\x3b\xbe\xbe\xe4\x89\xfe\xc7\x62\xd5\x84\x2e\x28\xab\x6c\x38\x67\x2b\x14\x57\x34\xf2\xcc\x67\x0c\x78\x46\x54\xb4\x6f\x1a\x56\x17\x9e\x5c\xa2\x16\xc5\x95\x43\x7f\xde\x10\xaa\x5e\x32\x5f\x78\x19\xc2\x40\x6b\xeb\x8e\x03\xae\xb4\xc7\xe2\xb5\xf8\x61\x51\x8f\x84\xe6\x24\xfe\x47\x2e\x55\x8a\x4c\x59\x2a\xd3\x3d\x61\x3b\x9c\xb3\x86\x0b\x9b\xa1\xef\x44\x54\x47\x1a\x15\x9b\xa6\x9c\x27\x31\xbf\x66\x21\x3c\x1e\x8f\xcb\x72\x66\xd1\x6a\xb6\x21\x9c\xd4\x53\xc6\xff\x91\x56\x81\x56\xeb\x02\x53\x2e\x0e\x93\x84\x88\xf4\x39\xdd\xed\x5b\x8a\x99\x3e\xfe\x46\x87\x48\x18\x1a\xac\x63\xfa\xe8\x35\x6f\x82\x30\x35\xc0\x58\x2d\xd0\x23\x1e\xdd\x16\xbc\xe0\x47\x78\xf8\xa9\x35\x33\xde\xfe\xd5\x74\x96\x27\x90\x52\x96\xab\x3a\xe7\x51\x09\x1a\x59\xad\xed\xf6\x4b\x94\x28\xae\x4c\x3a\x15\x38\x7a\x55\x66\x7a\xb4\xd0\x22\x8f\x66\xd3\x55\xa9\xb3\x22\x8a\x4a\x45\xa3\x10\x26\x57\x28\xc8\xae\xcc\xd6\x25\x0a\xca\x63\xd7\x3c\x33\x3d\xe3\xd8\x1c\x35\x6b\xd2\x3a\xdd\x18\xa3\x9a\x2b\xad\xdd\x5b\xa2\xbb\x16\x98\x44\x55\xdf\xb0\xb5\xc4\xdb\xe2\x44\x04\xc0\x39\x4d\x91\x49\x1f\xdb\x2a\x5a\x34\x80\xa3\x15\xa8\x6e\x20\x95\xc3\xd3\x8c\x08\x2a\x39\x7b\x99\xa1\x20\x8a\x8b\x10\x9e\xe9\x9a\x83\x62\xbd\x27\xcc\x95\xd4\xf1\xf7\xa2\x6c\xd9\xbf\xb7\xbb\x29\x73\xbc\xfd\xb7\xd2\xdb\xce\x84\xfe\x27\x73\xf6\x9c\x7d\xae\xaf\xcb\x3a\xf1\x9f\x71\xf5\x02\xa5\x6c\xfa\xb9\xdd\x45\xef\xae\x59\x1d\x3d\xb9\x57\xf8\xa4\x1a\xec\x8d\xe6\xdd\xc3\xbd\x3b\x1d\x44\x86\x88\x3b\xee\x46\x3c\x4d\x09\x8b\xbd\x11\x18\x60\x7c\xf2\x81\xc4\xf1\x87\x72\xfc\xfa\xa0\xf8\x87\xc8\x9d\x8b\x5a\xfb\x8b\x20\xfb\x57\x63\x15\xe0\x2f\x0f\x46\x1b\xca\x46\x1b\x22\xf7\xad\x35\x8c\xf6\x5c\xd7\xca\x0f\xd3\xc5\xab\xd5\x7a\x76\xf9\xf4\xe1\xa7\xda\xa8\xb7\x00\x3f\xfe\x08\x23\x54\xd1\x08\x23\xa9\xbf\x43\x2b\xbd\x43\x66\x4b\x13\x6c\x48\xde\x37\x3b\xa2\x2d\xd3\xdf\x60\x9f\x67\x66\x57\xbf\x2d\x36\x53\xa6\xd2\x1e\x11\xfb\x6d\x4a\x28\x7b\xdf\x02\x4b\x3d\x5b\x3c\x7d\xf8\xa9\x1e\x34\xe6\xf1\x6d\x0b\x4b\xe0\x8e\x72\x56\xa2\x5d\x9a\xa7\x26\x56\xca\x63\xdd\xd5\xc7\xe3\xf1\xb7\xe3\xf1\xa0\xb1\xc8\xaf\x19\x8a\x10\x04\xe7\xaa\xb1\xb2\x33\x83\x66\x7b\xa5\x56\x7b\xcf\xf9\x47\x39\x8c\x8d\xfa\x24\x57\x3c\x10\x98\x70\x12\xa3\xf8\x42\x43\xb4\xe8\x04\x9a\x43\xdb\x34\x4a\xd0\xdd\x0e\x85\x7c\x9a\x71\xa9\x86\xb9\x99\x77\x5a\x48\x19\x51\xfb\xa7\xd5\xc4\x3d\x6c\x67\xc2\xb0\x0c\xea\xe1\xd1\x68\x6e\x11\x25\x26\xd9\x9f\x8e\x78\xa6\x46\xe4\x5a\x9a\x78\xd3\x52\x53\x46\x15\x04\x57\x10\x04\xc6\x6d\xe0\xba\x4d\x67\xf5\x2d\x04\x81\x28\x64\xe9\x48\x4a\xb3\xaa\x5d\x07\x77\x3a\x12\x40\xe4\x8c\xc8\xa7\x0d\x97\x48\x3b\xd2\x35\xa2\x53\x1e\xe4\x15\xf5\x32\xb2\xf0\x82\x8d\xd5\x26\x18\x00\x19\xd9\x24\x18\x3b\x33\x5c\x73\x5d\xe6\x02\x2f\x73\xc6\x74\xa9\x38\x86\xd5\x91\x27\x60\xcf\x0a\xdd\xd9\x72\x27\xe6\x6f\x04\xd8\x91\xae\x54\xde\xc5\xd8\xda\x59\x3c\x95\xfd\x01\xa3\x5c\x50\x75\x28\x2e\x1c\xe0\xad\x45\x7a\xce\xa5\x5a\x3d\x83\xf7\x5d\xe7\xea\x82\x4c\xfb\xfa\x60\x4e\xd2\x12\xba\x14\x5c\x2b\x5e\xcd\x64\xa7\x8d\x85\xc6\x79\x1b\x1e\xcc\xb7\xf0\xd6\x39\x53\x3e\x02\xff\xb4\x68\x9e\xfa\x26\x14\x5e\x70\xd3\x09\xfa\xa5\x6c\xaf\x24\x8a\x73\xa7\x14\xdb\xa3\xd9\x19\x91\xf8\xdd\xb7\xae\xdd\x3b\x92\xcc\x29\x90\x10\xdc\xf8\x29\x73\xc8\x53\x7b\x04\x4e\x12\x08\x0e\x40\xae\x65\xa0\xad\xbe\xe1\x5c\x49\x25\x48\xe6\x21\xff\x57\xe2\xbf\xc5\x54\x9a\x43\x07\x04\x08\x0f\x7f\xba\x1f\xe7\x8e\x61\xf9\x0e\xd6\x6d\x37\xb6\x9a\xe7\x7c\x72\xa1\x2b\x45\xdb\xd7\xed\xa8\x5c\x12\xb5\x0f\xa1\x3f\x2a\x23\xfe\x92\x3b\x89\x12\x54\x81\xa3\xc1\x96\xb7\xfe\xd5\xcd\xb0\xc0\xe9\x9c\xc8\xa4\xcc\x53\xd4\x08\x76\xf4\x38\xe7\x51\x6e\xe6\xfc\xca\x94\x7a\x42\x42\x1f\x14\xc0\x6c\xbb\xc5\x48\x85\xe0\x5e\x7a\x59\x06\x94\x45\x34\x23\x89\x9f\xd1\xe5\x21\xb2\xe7\x27\x2e\x46\xa7\x43\x92\x92\x5f\x39\x23\xd7\xba\x85\xa6\xce\xba\x1d\x93\xfc\xdb\x2f\xa9\x64\x58\x0b\x7c\xc4\x4e\x46\x0f\xea\x9a\xca\x6a\x66\x13\x09\x23\x19\x14\xf5\xaf\x3e\xb3\x1e\xd1\xbc\x53\xf7\xbb\xb4\xef\x92\xda\xea\x29\x4d\x98\xe8\xd9\xa1\x15\xcc\x1d\xb8\xe7\x28\x3e\x07\x9b\xca\x88\x5f\xa1\x58\xf2\x24\x99\xb1\x38\xe3\x94\xa9\x0e\xb4\x95\x22\x42\xad\x31\xc1\x14\x95\x38\xac\x50\xca\x7a\x3c\xf6\xf0\xf2\x4d\x4a\xd5\x37\xad\x15\x11\xb6\x61\x32\xd4\x4c\x3d\x70\xd9\x41\x43\xe8\x7f\xa3\x5d\x62\x2b\x65\xc7\x95\xd5\x69\x18\x7a\xc5\xf5\x48\x80\x3a\x37\xdb\x50\xd4\xae\xae\x3b\x23\x83\x56\xe6\xbf\xa1\xd7\xba\x54\xd7\x92\x54\xf5\x1c\xdc\x93\xaf\x27\xc7\x9c\xed\x04\x4a\x27\x7c\xe6\xd9\x52\x70\xc5\x23\x9e\x84\xa0\xa2\xba\xb0\xfd\x2c\x78\xba\xe4\xc2\xbc\xdd\x3a\xad\x1b\xdb\x9a\x77\x00\xa7\x34\x16\xf3\xac\x3c\x1d\xd4\x97\xc5\xb3\x64\xf3\x3f\x60\x9c\xc5\xd9\x1f\x64\x97\xef\xc7\x1d\x76\x71\x81\xa5\x5d\xdc\xf7\x55\xb3\xc5\xd9\xa9\xf6\xd5\x65\xde\x51\xcf\xda\xa6\x29\xe4\x3a\xd6\xdb\x3b\x85\x74\x44\xac\x84\xa9\xe4\xfb\xee\xc9\x93\xc7\x4f\x4a\xe8\xca\x5e\x57\x79\x0c\xf5\xa4\xf0\x0c\xd5\x44\x29\xeb\xbf\x61\x01\x76\x0d\xec\x22\xd9\x14\x70\xb0\x34\xe0\x74\xb6\x38\xfb\x33\x68\xd8\x12\xbe\x53\xc5\xa6\x1d\x66\x91\x9c\x25\x9b\xb6\x6e\x09\xd1\x67\xed\x05\x27\xf1\x19\x49\x08\x8b\x28\xdb\xbd\x3e\x0d\xc3\x1a\x50\x9c\x58\xdb\x6a\xda\xeb\x60\xf9\x47\x5e\x30\x37\x66\xbd\x46\xab\xd5\x1a\x56\x9a\x2d\x74\x75\x66\x5d\x57\xf1\xc7\x34\x2c\x36\x1c\xd1\xce\x35\xc0\x44\xb0\xfa\x18\x3f\x4b\x36\xe5\x6d\x80\x7d\x1b\xd1\xba\x3e\xb0\xcc\xb7\x5c\x5c\x13\x11\xd7\xd9\x46\xc4\x0e\x95\xd1\xa4\x49\xaf\x20\xe4\x60\x54\x9d\xb3\x91\x9f\x75\x60\x3d\x5f\xaf\x97\x95\xf2\x6d\x02\xf7\x36\x43\x93\x69\xc7\xd8\x53\x0a\x71\x87\x18\x9f\x5f\xfa\x5e\xe6\x2a\xcb\x6d\xf4\xe8\xc9\xf7\x95\x28\x06\x14\x17\x79\xaf\x54\x16\x8e\x46\xe6\xa0\x3f\x4b\x36\xc3\xf3\x17\x2b\x33\x10\x8e\x7a\xd0\x7a\x47\xbb\x38\x83\x57\x97\x0b\xff\xc5\xab\xa5\xd5\xbb\x77\x29\xf6\x28\xbe\x5e\x4e\x61\x7e\x5e\xbd\x23\xf5\xff\x87\x03\xc0\xec\x46\x93\x2a\x89\x17\x67\x02\x4b\xb1\x31\xbe\x06\xe5\xdb\x5b\x3f\x50\x75\x10\x78\x1a\xd7\xf1\xe0\x85\xa6\x27\xd4\x44\xb0\xf2\x65\xae\xd6\xb8\x44\x1c\x7e\xae\x48\x2d\x51\x3a\x5e\x67\xdd\x71\x7d\x75\xf4\x0d\xb3\x63\xa5\x2f\x91\xa9\xe4\xd1\xfb\x77\x00\x00\x00\xff\xff\xc4\x20\x47\xa9\xd4\x23\x00\x00")

func assetsClusterYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsClusterYml,
		"assets/cluster.yml",
	)
}

func assetsClusterYml() (*asset, error) {
	bytes, err := assetsClusterYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cluster.yml", size: 9172, mode: os.FileMode(420), modTime: time.Unix(1485843799, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPipelineYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\xeb\x6f\xdb\x36\x10\xff\xee\xbf\xe2\xe2\x15\x08\x10\x40\x76\x9c\x47\xdb\x10\x18\x06\x25\xf1\x32\x03\x6e\x6c\x58\x49\xfb\x61\x18\x0a\x5a\x3e\xdb\x6c\x24\x52\x20\x4f\xf1\xb2\xa2\xff\xfb\x40\xea\x61\xca\x8f\x2c\x69\x31\x0c\xcb\xa7\xf8\x9e\xbf\xbb\x1f\xef\x48\x05\x41\xd0\x0a\x3f\x45\x77\x98\x66\x09\x27\xfc\x55\xe9\x94\xd3\x47\xd4\x46\x28\xc9\xe0\xf0\xe4\xb8\x77\x1c\x1c\x5f\x04\xc7\x17\x87\xad\x31\xd7\x3c\x45\x42\x6d\x58\x0b\xe0\x46\xd0\x6f\xf9\xf4\xde\xa0\xb6\xbf\x00\xee\x9e\x32\x64\x10\x91\x16\x72\xe1\x04\xd7\x68\x62\x2d\x32\x72\x81\x0a\x6b\xb0\xe6\xb5\xef\x04\x33\xf5\x0a\x5f\x6b\x0e\xa4\x20\xcb\x93\x04\xe6\x5a\xa5\x1d\x18\xc9\xe4\x09\x68\x89\x70\xcb\x53\xec\x80\x54\xe4\x7e\xdd\x4f\x86\x75\x92\x4b\xcd\x65\xbc\x7c\x45\x9a\xc2\xa1\x54\xcf\x79\x9e\x10\x83\x76\xca\x0d\xa1\x6e\xd7\x51\xef\xd4\x03\xca\x22\xe8\xad\xea\xc7\x4b\xc5\x80\x74\x8e\x2f\xc8\x12\x61\xac\x91\x3a\x30\x20\x48\xc5\x62\x49\x90\x28\xf5\x00\x46\xa5\x48\x4b\x21\x17\x90\x88\x07\x84\x8b\x69\xef\xfd\x05\xef\xbd\x3d\x3f\x7b\x7b\x76\x7a\x7e\x72\x72\xfe\xb6\x37\x7f\x37\x3d\xc5\xe9\xec\xec\x8c\xf7\xce\x4f\x7b\xfc\xec\xe4\xfd\x3b\x3e\x87\x51\x98\xd3\xd2\x81\x81\x95\xa0\x25\xf0\x38\x46\x63\x6c\x97\x6c\xb7\x3a\x70\xe3\x3a\xb6\x24\xca\x0c\xeb\x76\x17\x82\x96\xf9\xb4\x13\xab\xb4\x6b\x90\x48\xc8\x85\xe9\x92\x75\x36\x2d\x80\xcb\x5c\x24\x33\x87\x7d\x5f\x15\x55\x33\x12\x21\xf3\x3f\xaf\x94\x24\x2e\x64\xd1\x14\xe7\x7b\xa5\xd2\x2c\x27\x7c\x51\x88\xcb\xfb\xc1\xf0\xfa\xf3\x4d\xff\xb6\x3f\x09\x87\xbd\xcf\xd1\x87\x70\x38\xac\x03\x0d\x52\xbe\xf8\xe7\x10\x7c\x65\xba\xb1\x9a\xe1\xd4\xba\x74\xbf\xf0\x47\xce\x54\x86\xf2\xcb\xec\x21\x78\xdf\x6e\x4d\xd0\xa8\x5c\xc7\xe8\x8e\xea\x95\x9a\xa1\x8b\x3c\x51\x49\x23\x70\xf8\x29\x62\x6c\x10\x7e\x60\xcc\x6a\x9c\x62\xac\x55\x86\x9a\x44\xe1\x69\xff\x42\x63\xf2\x14\xad\xc1\x58\x25\x22\x7e\xba\x56\x71\x9e\xa2\xa4\x4a\x0f\x10\x11\x27\x6c\x8a\x02\xe8\xcf\xe7\x18\x13\x83\x30\x49\xd4\xaa\x96\xdb\x04\x42\xc6\x22\xe3\x09\xf3\x84\x00\x11\xea\x47\x11\x63\x53\x18\x40\x5d\x61\x87\xa7\xfc\x2f\x25\xf9\xca\x58\xfe\x3c\xab\x30\x76\x07\xab\xe5\x7b\x19\x32\x6c\x0d\xbb\x54\x8d\x39\x2d\x19\xb4\xbb\xed\xea\xb7\xad\xc6\xab\x33\x28\x24\x4f\x76\x96\xd8\x3a\x71\x60\x0a\x64\x75\x82\x7d\x5d\xd8\xd9\x87\xe7\x3a\x51\x63\x87\xf6\x51\xbb\x21\xaf\xd8\xdb\xd4\x34\xf6\xd2\x49\xd0\x3b\x0e\x7a\xef\x0e\x4b\x82\xc7\x22\xc3\x44\x48\xfc\x7f\x72\x9c\x95\xe8\xff\x0b\x9a\xab\xdc\x3f\xce\xf4\x36\xc8\xc6\x19\x66\x47\x2f\x62\x19\xf6\xf6\x75\x5f\x06\x73\xca\x6e\x90\x46\xd3\x2f\x18\xd3\x33\xaa\xf2\xf8\xec\xb4\xb8\xcc\xe3\x07\xac\x2c\xaa\x6d\xf3\xaf\x20\x1d\xe7\xbb\x90\xd6\x29\x36\x1c\xb8\x96\x8c\xaf\x0c\x33\xa7\x8c\x31\x9f\xad\xa3\x1f\xc5\x71\xb4\x49\x53\xa2\xf2\xd9\xdc\xdd\xff\xd6\x61\x53\x8d\xb1\xd9\x92\x09\x9e\xb2\x31\x37\xc6\x3b\x7e\xdf\xdb\xb0\x7d\xa3\xed\xf6\xf6\x58\x2b\xdb\xb0\xad\xb1\xae\x17\x3b\x63\xa5\x49\x79\x49\x64\x28\x67\x66\x24\x59\x73\xf5\xef\x19\xfe\x62\x12\x0e\x26\x38\x2f\xa2\x46\xc4\xe3\x07\x2b\x2c\xf5\x8d\xfb\xdb\x05\x03\x9e\x65\x89\x88\x5d\xa3\x4a\xa3\x72\xb6\xdd\xf6\x81\x83\x1b\xa4\x90\xa8\x99\xbd\x13\xea\xca\x38\xd4\x24\xe6\x3c\x26\xb3\xa6\xa5\xa8\xea\x6a\x74\xdd\x1f\x0f\xc6\xfd\xe1\xe0\xb6\x5f\xaa\xfa\xf2\x51\x68\x25\x9b\xc3\x56\x58\x3b\xc8\xf5\xbd\x5d\x2b\xfd\x8b\xd8\xb3\xf1\xc4\xb5\x69\x71\xd5\x7a\x46\x4e\x50\x95\xb4\x71\x20\xf7\x42\xbc\x13\x29\xaa\x9c\x06\xf2\x83\x90\x39\xa1\x61\xd0\x3b\x6e\x01\x54\x1b\x79\x27\x6d\xb5\x92\x55\xff\x6d\x52\xe7\x33\xbf\x87\x39\xdb\xd6\x50\xcb\x66\xc3\xfd\x8b\xc0\xeb\x79\x44\x7c\xe1\x6f\xc1\x82\xf5\xa2\xc6\xba\xc4\x62\x58\x8c\xbf\xe3\x07\x32\xcb\x69\x4d\x18\xfc\xfe\x87\x77\x6a\x77\x06\xa9\xc2\xd8\x8a\x07\xb3\xe6\xe4\x5d\x71\xc2\x85\xd2\x4f\x3b\x9c\x00\x46\x2b\x89\x9a\xc1\xdd\x52\xe8\xd9\x98\x6b\x7a\x6a\x68\xd7\x13\xd2\x3b\x6c\x28\xc6\x5a\x3d\x8a\x99\xf5\x2c\x1e\xa7\x9e\x72\x94\x53\x03\x7d\x63\x33\xf8\xe0\x0b\x43\x4f\x7d\xa5\xe4\x5c\x2c\x72\xcd\xb7\xb7\x47\x09\xd3\x1d\x9a\xf5\x57\xc0\xc6\xfc\x67\xaa\x61\x61\x05\x0d\x8b\xf2\x5d\xee\xdb\x78\x2f\xef\x3a\x55\xfd\xbe\x6d\x58\x3a\x89\x67\x38\xc9\xe5\x48\xbb\x0e\xf4\x36\xf8\xb5\x87\x5e\x24\xcf\x12\xdc\x30\xfc\x2e\x2a\xdd\x49\xdd\xd5\xa2\xf0\x53\xf4\x5a\x0a\xeb\x95\xe1\xe9\x37\x8e\xe0\xcb\x49\x7c\x01\xfd\x65\xdd\xaf\xe1\xbf\x9c\x49\x6f\x6d\x6e\x8d\xea\x3e\x5a\x2a\x28\x11\x29\xbd\xb5\x59\xa2\xd3\x5a\x30\x54\xc5\x72\x65\x70\x30\x48\x33\xa5\xe9\x23\x4f\x72\x84\x34\x0f\xa6\xee\x9e\x0e\xfc\x9b\xb0\x55\x80\x6f\x3e\xf5\xef\x75\xf9\xf8\x72\x9e\x0c\x0e\xa2\x7c\x5a\x7f\x08\xc5\x4a\x1a\xbb\x1d\xec\x33\xab\x78\x70\xb9\x8f\xa2\xf5\xe7\xc4\x52\xa5\xf8\x8b\xc6\x85\x50\xf2\xe7\x37\x5f\xdd\xd2\x9a\xb8\x5f\xdf\x7e\xea\x66\x45\x9d\xa6\xfb\xe6\xab\x5f\xf7\xb7\xee\xa3\xc0\xd5\xf6\x07\x5f\x8d\xa8\xfc\x2c\xf5\x57\xd4\xf7\x82\xac\x2a\x7f\x16\xa7\x85\xd3\x7d\xf3\xb5\xca\xf5\x6d\x37\xb4\x4a\xed\xd0\xb5\xfe\x0e\x00\x00\xff\xff\x4d\x5a\x7e\xd4\x0e\x10\x00\x00")

func assetsPipelineYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPipelineYml,
		"assets/pipeline.yml",
	)
}

func assetsPipelineYml() (*asset, error) {
	bytes, err := assetsPipelineYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pipeline.yml", size: 4110, mode: os.FileMode(420), modTime: time.Unix(1485846825, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRepoYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x4f\x6f\xda\x40\x10\xc5\xef\x7c\x8a\x49\x14\x29\x52\x24\x13\xd3\x4b\x9b\xbd\xb9\x84\x44\x48\x51\x6b\x61\x48\xce\x93\x65\x80\x15\xfb\xc7\x1a\xcf\x96\xd2\x88\xef\x5e\x79\x43\xa8\xa9\x5b\x9f\xac\xf7\x7e\xf3\xbc\xfb\x3c\x59\x96\x0d\x8a\x97\x6a\x4e\xae\xb6\x28\xf4\x10\xd8\xa1\x3c\x13\x37\x26\x78\x05\xd7\x9f\xf2\x51\x9e\xe5\x77\x59\x7e\x77\x3d\x28\x91\xd1\x91\x10\x37\x6a\x00\x30\xa3\x3a\x7c\x43\x47\xed\x3b\xc0\x7c\x5f\x93\x82\x4a\xd8\xf8\x75\x12\xee\xa9\xd1\x6c\x6a\x49\x31\x2d\x0b\x1e\x1d\x0d\x66\xd4\x84\xc8\x9a\x52\xc4\x44\x37\xad\xd3\x4d\x28\x5e\x2a\xa5\x26\xe3\x99\x52\xad\xd3\x18\x09\xbc\x4f\x76\xc9\xa1\x26\x16\xf3\x3e\xd9\x3e\x7f\x80\x74\x0c\xb8\x98\xd1\xea\x74\xaa\x1e\x53\x06\x6b\xf4\x7e\x4e\x3f\xe5\x63\x1e\xa0\x7b\xcd\xfc\x4b\x36\xca\xb3\xd1\xe7\xeb\x93\x5b\x09\x0a\x39\xf2\x9d\x81\x0c\x2a\xb3\x54\x50\x58\x1b\x76\x65\x6c\x36\x65\xb4\xf6\x64\x02\x4c\x56\x2b\xd2\x72\xf4\x3b\x7a\xc9\xc6\x6b\x53\xa3\x55\x1d\x11\xd2\x5d\xe1\xf2\xe6\xb2\x23\x8e\x83\x5f\x9a\xd4\xd9\x39\xc9\xfe\xc9\x6c\xe9\x5c\x04\xc0\x5d\xa3\xaa\x54\x67\xc1\x5e\xc1\x45\x15\x5f\x01\xd9\xab\x56\x37\xe8\xd4\xd5\x5b\xaa\xb3\xd0\x3a\x44\x2f\xd3\xe5\x41\xc5\x86\xf8\xf6\xa6\x13\x53\xe8\xbf\xbf\x96\x01\x69\x56\x8f\x24\xf7\x61\xe7\x6d\xc0\xe5\x82\xed\x43\xe0\x27\xdc\x13\xf7\xb0\xaf\x28\x7a\xf3\x48\x32\x75\xb8\xa6\x7f\xbb\xe3\x0d\xe9\x6d\x9a\x2e\x7e\xa0\xb1\xf8\x6a\xac\x91\x7d\x8f\x2d\xe3\x7f\x42\xa6\xde\x88\x41\xa1\x14\xb1\xa8\xdb\x13\xf5\x98\x77\x39\x11\x25\xb2\xf4\xfc\x71\x70\xb5\xa5\xf3\x8c\xef\x51\xea\x28\xa7\x55\x5e\xf0\xf1\xef\x9c\x2d\xee\x82\x2d\x84\x15\xc8\x86\x80\xa9\x0e\x09\x78\x46\x1b\xe9\xd8\x76\xaf\xe1\xe1\x72\xcb\x43\xd2\x3c\x3c\x3a\x33\x5a\x9b\xe0\x0f\x43\x74\xf8\x2b\x78\xdc\x35\x43\x1d\xdc\xed\xd5\xdb\xc7\x9e\x1e\x06\xbf\x03\x00\x00\xff\xff\xa7\xe7\x4b\xa3\x81\x03\x00\x00")

func assetsRepoYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRepoYml,
		"assets/repo.yml",
	)
}

func assetsRepoYml() (*asset, error) {
	bytes, err := assetsRepoYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repo.yml", size: 897, mode: os.FileMode(420), modTime: time.Unix(1485238853, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsServiceYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x5f\x6f\xdb\x38\x12\x7f\xf7\xa7\x98\x1a\x07\xe4\xae\x38\xa7\x4e\x8a\x3b\x34\x7c\x73\x6d\x67\xe3\xdd\x38\x30\x62\x27\x7d\x28\x8a\x82\xa6\xc6\x16\x51\x8a\xd4\xf2\x4f\x5b\x77\xd1\xef\xbe\x20\x69\x49\x94\xad\x66\x9d\xee\xe6\x29\xe6\xfc\x38\xbf\xf9\xcb\x19\x0d\x06\x83\xde\xe8\xdd\x72\x85\x45\x29\xa8\xc5\x6b\xa5\x0b\x6a\x1f\x51\x1b\xae\x24\x81\xb3\xcb\xe1\xc5\x70\x30\xbc\x1a\x0c\xaf\xce\x7a\x0b\xaa\x69\x81\x16\xb5\x21\x3d\x80\x25\xea\xcf\x9c\xe1\x1d\x2d\xd0\xff\x04\x58\xed\x4a\x24\xb0\xb4\x9a\xcb\x6d\x38\x98\xa0\x61\x9a\x97\x36\x68\xf2\x38\x50\x1b\x30\xf1\x5a\x0f\x60\x56\xd0\x2d\x3e\x68\x71\xca\xed\x89\x62\x9f\x50\xc7\x2b\xf0\x70\x7f\xdb\xf0\x2f\x94\xb6\xa7\x68\xf0\x38\xc0\xaf\xa5\x32\x98\x01\x97\x89\x1d\x1e\xb8\xa1\x4e\x58\x02\x67\x6f\x86\x6f\x86\x67\x8d\xf2\x1b\xa4\xc2\xe6\x53\x99\x95\x8a\xcb\x93\x68\x2a\x2c\x58\x05\x16\x8d\xad\x78\x20\x0f\xaa\x0e\xe8\x5e\xc5\xd3\x84\x71\x5c\xba\x53\x68\xc6\x8b\x07\x70\x92\x5b\xe3\x79\x34\x7a\x12\x84\x8d\xd2\xc0\x94\xb4\x94\x4b\xd4\x07\x4c\x17\xa9\x5b\x73\x2c\x94\xde\x9d\xc2\x13\x91\x9e\x84\x0a\xa1\x18\xb5\xe8\xff\xf7\x24\x9c\x4a\xd4\xf0\x6f\x2e\x61\xce\xdf\xfe\xe7\x80\xed\xf5\x30\xa5\x9b\xa0\xe1\x1a\xb3\xb1\x72\xed\x18\xde\xb9\x62\x7d\x64\xe8\xe5\x59\x47\xed\x04\xa0\xaf\x9e\xda\xbd\xe0\xb8\xa0\x4e\xb2\xdc\x67\x73\xa7\x9c\x86\xe9\x78\x59\x85\xfb\xbc\x07\xb0\xa0\x36\x5f\x50\x6b\x51\xcb\x94\x75\xac\x8a\x82\x4e\x50\xf0\x82\x5b\xcc\x6e\xb9\xb1\xc7\x84\xfe\xd4\xd3\x95\xd4\xe6\x31\xc4\xca\x45\xd7\x6d\x8e\x29\x47\x6a\xb9\x37\xdc\x5f\x44\x89\xfa\xde\x09\x5c\x68\xae\x34\xb7\xbb\x1f\xba\x9c\x10\xae\x72\x84\x72\x8f\xf7\xc4\x9e\x46\x3b\x81\xb0\x46\x2e\xb7\x40\xb3\x0c\xb3\x8a\x5e\xec\x39\xda\xf4\x17\x3d\x80\xc7\x92\xcd\xb2\xe7\x34\xa3\x57\xf7\x99\x0a\x17\x5c\xe3\x45\xe9\x7b\xc4\x57\x91\x3f\x0f\xca\x7a\x00\x53\x66\xc6\xc2\x19\x8b\xfa\x9f\xd0\x3c\x65\x06\xf6\xea\xbc\x24\xc3\x52\x28\x5f\x5f\xe7\x91\x69\x2a\xd6\x55\x08\x47\xed\xb4\xfd\x1d\x57\x46\x5a\x56\x90\xe9\xed\xdb\x3a\x80\xa1\xac\xad\xa5\x2c\x0f\x22\x4b\xf5\x16\x2d\x6c\xb5\x72\x65\xb0\x68\xac\x64\xc6\x3d\x4b\x78\xef\x6e\xa8\x39\xaa\xa8\xfe\xb5\x24\xe4\x4e\xd9\x7e\xfc\x09\x30\x88\x47\xd3\xdf\x1d\x15\xa6\x3e\xad\xcf\x7f\x55\x5c\xf6\x09\xbc\x87\x7e\xff\xbf\xf0\xe2\x1e\x37\x69\x91\x7e\x48\xd1\xfd\xde\x3d\x1a\xe5\x34\xc3\x40\x3e\x65\x66\xdf\x4c\x69\x4c\x46\xef\x96\x84\x4c\xc7\x4b\x42\x96\xc9\x6b\xb6\xd0\xaa\x44\x6d\x79\xbc\xe9\xff\x5a\xf9\xf3\x7f\xde\x96\x59\x88\xd1\xa3\x0f\x19\x81\x17\x4b\xb7\x86\x7f\xfd\xd1\xe4\xfa\xfb\x1e\xdb\xea\xdd\x68\x72\x47\x57\xd7\x60\x9f\xcd\x02\xa5\x1d\x2b\xb9\xe1\x5b\xa7\x69\x48\x52\xcd\x3b\xa7\x5f\x79\xe1\x8a\x05\x6a\x86\x5e\xdf\xc5\x70\xd8\xc8\xb8\xf4\xb2\xf8\xe4\xee\x6a\x48\x05\xb8\x55\x34\x7b\x4b\x05\x95\x6c\x3f\x7f\xaa\x50\x05\x5f\x36\xcd\x89\x3f\x6b\xe7\xaa\x25\x1a\x57\x2f\x48\x18\x5c\x2d\x8f\xfc\x49\x82\x85\x06\x1b\x86\x4c\x0b\xeb\x4f\x5a\xd8\x55\xa8\x9e\x5f\x7c\xf1\xf8\xca\x8d\xe0\x58\xd1\x89\xa8\x65\x4a\x80\x84\x1c\xde\xa9\x90\x87\xbd\xf4\x5e\x09\x3c\xc8\xd5\xe9\xfe\x55\xbc\x7b\x3b\xbd\xae\x93\x48\x57\xd4\x7c\x9a\xe0\x86\x4b\x1e\xfb\x2a\xe0\xe6\x9c\x69\xb5\x7f\xee\xda\x80\x56\x4d\x36\x06\x27\x75\x39\x1b\xcd\x09\xa9\xe9\xeb\x5e\x22\x5d\xc6\x1f\x97\xec\xc8\x18\x57\x04\xc5\x0b\x25\x38\xdb\x4d\x14\x73\xbe\xb0\x9a\x38\x2c\x2d\xb5\xd8\x3e\x1a\xc0\x74\xb3\x41\x66\x09\x8c\x84\x50\x5f\x12\xbf\x17\x9a\x4b\xc6\x4b\x2a\x48\x2b\x69\xad\x9e\x6a\xb4\x20\x33\xe7\xb4\xa0\xdf\x94\xa4\x5f\xcc\x39\x53\x45\x22\x1f\xb1\x76\x49\x7b\xbc\xb1\x86\x34\x06\xef\x45\xde\x47\x02\xfd\x57\xfd\xea\xb7\xf7\x23\xf1\x70\x10\x4f\x76\xb1\x0e\x91\x99\x41\xba\x92\xd4\x37\x3a\x3c\xef\xf4\xfd\x29\xef\xbb\xac\x8e\x7e\x5e\x92\x91\xb3\xb9\xd2\xfc\x1b\x2e\x91\x39\x3f\x7e\x42\x9d\xce\xe4\x56\xa3\x31\x1d\xf8\xf8\xf8\xae\xf1\xe5\xa1\x4c\x50\x63\x39\x13\x8a\x66\xeb\xd0\xa6\x5c\x6e\xc9\x04\x35\x6e\xfd\x6b\xab\x67\xd2\x58\xdf\xbb\xe6\x5a\xab\x22\xed\xe5\xd3\xd4\x3c\x83\xf3\xfe\x90\xf1\x1d\xb7\xf9\xf3\x19\x2b\xc3\x63\xf3\x1e\x45\xe2\x29\x33\x93\x7e\xff\x89\x7b\x37\xcd\xa2\x78\xa2\xa7\x5d\x26\x56\xd3\x83\x40\xff\xa5\xaf\xc0\x1f\x77\x72\xf7\x40\x39\xea\xf6\xce\xb9\x52\xbd\x8f\x0d\x32\x29\xef\xbf\x78\x60\xfd\xa6\xdb\x92\x8e\x4b\x57\x0b\xa7\xc6\xa0\xdf\x31\x05\x81\x33\xab\x1d\x9e\xd5\x92\xf0\x09\xb0\xbf\x58\x7d\x41\x34\x33\x24\x2e\xb6\x2d\xb5\xf1\x2c\x69\x2a\x6d\xe7\xb4\x2c\xb9\xdc\xb6\xc6\xc8\x8d\x32\x36\x3e\xf3\xc3\x24\x90\xa7\x4d\x80\x47\x25\x5c\x81\x86\xc0\xfb\x0f\x47\x6b\x8c\xdf\x04\x8f\x43\x1c\xd3\xd9\x54\x25\x97\xdb\xc7\x4b\x42\xd2\x4b\x3f\xf7\x6c\xb2\x83\x24\x44\xd2\x8d\xd2\x5f\xa8\xce\x6a\xc7\x9e\x35\xac\xda\x6b\x50\x54\x7b\xcd\x51\x64\x24\xec\xc7\x83\xf2\x60\x0a\x85\xa9\x62\xc8\xd1\x7e\x53\x0d\xf2\xc3\xfd\x0e\x9e\x5e\x48\xda\x2b\x61\xb5\x97\xd4\xcb\x75\xa4\xe9\xda\xbb\xeb\x54\x24\x2e\x9d\x9c\x89\xc3\x30\x3c\x37\x11\xb1\x8b\xc7\x39\xb2\x4f\x33\x69\x51\x7f\xa6\x62\x89\x4c\xc9\xcc\x10\xf8\xdf\x31\x26\x0e\x8b\xb4\xbc\xda\x9f\x9e\x1d\x37\xb4\xb2\x8a\x29\x41\xe0\x66\xb5\x5a\x1c\xcb\x57\xbc\x40\xe5\x6c\x4d\xfa\xba\x05\xd9\xad\x72\x8d\x26\x57\xa2\xda\xec\x2e\xf7\xe2\x39\xb5\x2c\x4f\x57\xc5\x1b\x6b\xcb\xb1\xca\x90\xc0\xe5\x70\x38\xb8\xbc\xba\xea\x35\x7d\xf4\xc3\x86\xe8\x34\x2e\x2d\x3a\x6b\x35\x5f\x3b\x9b\x4e\xc3\xdf\x70\x47\x20\xdb\xbf\xbb\x71\x71\xfc\x98\xa1\xa0\xbb\x73\x1b\x5d\xf9\x68\xa2\x2f\xed\x42\x23\xf0\xff\xaa\x61\x1f\x64\xde\xed\x5c\x15\xf0\xe4\xfb\xe8\xa9\xa2\x0b\xb0\xef\xbd\x3f\x03\x00\x00\xff\xff\x3b\xd6\xf7\xe2\x1a\x11\x00\x00")

func assetsServiceYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsServiceYml,
		"assets/service.yml",
	)
}

func assetsServiceYml() (*asset, error) {
	bytes, err := assetsServiceYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/service.yml", size: 4378, mode: os.FileMode(420), modTime: time.Unix(1485813617, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVpcTargetYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\x4d\x4b\x03\x31\x10\x86\xef\xfb\x2b\xc6\x22\xec\xc5\xc0\xea\xad\xb9\x95\xad\xc5\x8a\x68\xe9\x96\xed\x39\xdd\x4c\xdb\xe0\xe6\x83\x64\x22\x8a\xf8\xdf\x25\x59\x57\x4a\x11\xc5\xdb\x7c\xbc\xcf\xcc\x3b\xc3\x18\x2b\x66\xdb\x66\x83\xda\xf5\x82\x70\x61\xbd\x16\xd4\xa2\x0f\xca\x1a\x0e\xe5\x4d\x75\x5d\xb1\x6a\xca\xaa\x69\x59\xac\x84\x17\x1a\x09\x7d\xe0\x05\x40\xeb\xba\xa5\x4c\x01\xc0\x1c\x43\xe7\x95\xa3\x8c\xb4\xab\x1a\xc8\x02\x09\x7f\x40\xca\xed\xcd\x9b\x43\x0e\x0d\x79\x65\x0e\x05\xc0\x2a\xee\x7a\xd5\x35\x71\x67\x90\x96\x32\xfc\x30\x62\xe8\x81\x92\xe1\x84\xaf\xad\xd6\x62\x8e\xbd\xd2\x8a\x50\x3e\xa8\x40\xc5\x1a\x83\x8d\xbe\xc3\x3c\x63\x2b\x14\xdd\x09\x23\x7b\xe4\x27\xd4\x64\xb6\x6d\x38\xaf\x7b\x1b\xe5\x70\x5a\x5a\xc0\x93\xb6\xb6\x46\xaa\x94\x0e\xd0\xa4\x78\x8a\xe4\x22\xfd\x7a\xdb\xe6\x88\xa0\x24\xd8\x3d\xd0\x11\xe1\xc5\x75\x59\xd2\x8a\x3e\x22\x87\x8b\x35\xee\x07\x32\x57\x6f\x5f\x9d\xf5\x34\x0c\x01\x78\x14\x3a\x49\x9a\xb8\x83\xcb\xf7\xec\xa9\x21\xd1\x3d\xa7\xf2\x07\x1b\xa1\xbf\x3f\x93\x0c\xb8\xac\x82\x90\x65\xe3\x8f\x06\x0f\x5f\xcb\x16\x86\xf3\x7b\xab\xcc\x98\x33\x28\xaf\xca\xef\x38\xfb\x3c\x5b\xf5\x5f\xc7\xe7\xf8\x67\x00\x00\x00\xff\xff\xd0\x83\xa1\x08\x46\x02\x00\x00")

func assetsVpcTargetYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsVpcTargetYml,
		"assets/vpc-target.yml",
	)
}

func assetsVpcTargetYml() (*asset, error) {
	bytes, err := assetsVpcTargetYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vpc-target.yml", size: 582, mode: os.FileMode(420), modTime: time.Unix(1485843799, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVpcYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x98\x6d\x4f\xe3\x38\x10\xc7\xdf\xf3\x29\x06\x74\x52\x6e\x25\x0a\x6d\x02\xab\xc5\xef\x7a\xa5\x2c\xbd\xdb\x85\xaa\xa9\xba\x12\xcb\xbd\x70\x93\x29\x8d\x48\xec\x9c\xed\xf0\xa0\x15\xdf\xfd\x14\x27\x7d\x72\x93\xd2\xa7\xed\x76\xc5\x1b\x6a\x8f\x3d\xf3\xff\x65\xec\x99\xa4\x52\xa9\x1c\xd4\xbf\xb9\x5d\x8c\xe2\x90\x2a\xbc\xe2\x22\xa2\xaa\x87\x42\x06\x9c\x11\xb0\xec\x6a\xad\x5a\xa9\x5e\x54\xaa\x17\xd6\x41\x9b\x0a\x1a\xa1\x42\x21\xc9\x01\x40\x8b\x49\x45\x99\x87\x5d\x64\x94\x79\xaf\xe9\x10\xc0\x25\x4a\x4f\x04\xb1\xd2\x8b\x47\x16\xa0\x32\x13\x50\x1c\x12\x89\x30\xe0\x02\x7a\xed\x86\x5e\xd0\x7d\x8d\x91\x80\xab\x44\xc0\x1e\xf4\x40\x3d\x0c\xf9\x33\xfa\x3d\x1a\x26\x28\xb3\x4d\x2b\xe0\xe3\x80\x26\xa1\x1a\xff\xf2\x03\x8f\x2a\xf4\x73\x97\x7a\x8e\x4c\x19\xb9\x72\xa8\xb7\x29\x88\xc9\x4d\xfa\x0c\x15\x0c\x04\x8f\xe0\x79\x18\x78\xc3\x34\x28\x9a\x1a\x83\xeb\x5e\x03\xf5\x3c\x94\xf2\xa4\x38\xb4\xaf\x01\xfb\x82\xec\x41\x0d\x09\x58\x17\x56\x36\x44\x5f\xc6\x43\xb5\x4f\xd6\x6c\x40\xd5\x13\xfd\x77\x5a\x9d\x16\xd6\xa6\x4a\xa1\x60\x04\x8e\xfe\xbc\xbf\xf7\x7f\xd4\x8e\x9d\xb7\x0f\xf7\xf7\x27\xcb\xfc\x38\xcd\xff\xb5\xdf\x3e\x1c\xe9\x2d\x1b\x9c\x49\x25\x68\xc0\xd4\x8c\x46\x2b\x4a\xa4\x82\x3e\x02\x85\x27\x1a\x06\x3e\x34\x5a\x97\x1d\xe8\x87\xdc\x7b\x24\xf0\x72\xa2\xff\x4e\x5f\x4e\xd2\x68\x7b\xb1\xd7\x08\x7c\xf1\x97\x9e\x2b\xa5\xa5\x97\x2e\x7e\x6c\xab\xb2\xa9\x8d\xe0\xd4\x3e\xee\x2f\x9d\x76\xd2\x0f\x03\x2f\x83\x50\xbf\xab\xad\x44\xaa\x7e\x57\xdb\x32\x29\xfb\xec\x77\x21\x65\xaf\x48\xca\xde\x22\xa9\xda\x6f\x45\xca\x59\x91\x94\xb3\x45\x52\xf6\x5e\x93\x6a\x70\xe6\x07\xe9\x1a\x5d\x04\xae\xa9\x34\x0e\x63\xc6\xeb\xe8\x8a\x11\x72\xc3\xd5\x51\xf6\x33\xad\x0e\x7a\xa8\xf9\x5f\x42\x43\x79\x44\xe0\xfb\x61\x07\x07\xa5\x07\xf9\x18\x2c\xeb\xdf\xa2\xed\xed\x0d\xb6\xb7\xdf\xdf\xde\xd9\x60\x7b\xc7\xd8\xbe\x83\x92\x27\xc2\xcb\x8a\x65\xaf\xdd\x20\x53\x29\x52\xff\xe6\x12\xd2\x6c\xd8\x84\x8c\x2e\xee\xb6\xe0\x31\x0a\x15\x8c\x6a\x2b\xc0\x24\x03\x41\x7b\x9b\x2e\x09\xb9\x49\x93\xd1\x7e\x88\x97\x4c\xba\x49\x1c\x73\xa1\x08\x58\x4a\x24\x68\x99\xd3\xd7\x5c\x2a\x46\x23\x94\x86\x81\xd9\x2a\x64\x8e\x8c\xd1\xdc\xb6\x4b\x1f\xe4\x04\xc7\x3f\xf8\x4a\xe0\x86\x46\x98\x8f\x00\xe8\xc6\x80\xc0\xa1\x9b\xf4\xe1\x8f\x1f\x5a\xa0\xab\xa8\xf7\x98\x1a\xbd\xcd\xdf\xd9\xc5\x34\xb2\xe9\x51\x9e\x66\x79\x46\x0a\x92\xac\x04\x59\x2f\xf6\x5a\xfe\x08\x57\x0e\x76\x1e\x64\x59\xd2\xe5\xe6\x5f\x69\x9c\x59\xb4\xe2\x5b\xf6\x85\x26\xcc\x1b\x12\x48\xa9\xe5\xf3\xf5\x27\x1a\x84\xb4\x1f\x84\x81\x7a\xbd\xe3\x4c\x6b\xc6\x10\x3d\x05\xdf\xa1\x7a\x0c\x87\x9f\xd3\x5d\x65\x9e\x61\x65\xe4\x50\x3d\x73\xf1\x68\xc2\xcb\xfc\xae\x0b\xb9\x12\xeb\xe5\x95\xda\xfc\xbd\xbf\x11\x6d\x7b\x8b\xb4\xed\x6d\xd2\xae\xed\x03\x6d\x7b\xbe\x76\x6c\x44\xdb\xd9\x22\x6d\x67\x9b\xb4\xed\x7d\xa0\xed\xe8\x17\x9c\xb4\x18\xa2\xfa\x4c\x15\x3e\xd3\xd7\x62\xda\x86\x51\x09\xd4\x5d\x85\x9f\x55\x80\xa5\x02\xef\xb5\x1b\xf9\x7c\x5d\x29\xea\x0d\x23\x64\x6a\xa5\x94\x30\xbc\x8c\x2d\xe6\x89\x64\x9a\x3a\x3c\x51\xd8\x4d\x2b\x45\x71\x40\x93\xf9\x95\xc2\xd8\x71\x66\xcc\xca\x59\xa0\x24\x6f\xb8\x62\x64\xbe\xbc\x65\xa4\xe0\xb9\x94\xc8\x9c\x70\x18\xab\x35\x01\xe6\x96\x97\x28\x55\xc0\x68\x7a\xc0\xa7\xce\xe7\xec\x5b\x27\xc0\xb2\xcf\x67\x5c\xa8\x26\x7e\xea\x52\x72\x2f\xd0\x0e\x16\xdd\x35\x85\x0b\xd6\x2e\xae\xd9\xbc\xa1\x7d\x76\xd1\xb2\x90\x8c\x9a\xb0\x23\x61\x65\x75\x6c\xa1\x30\x7b\x03\x61\xce\x8e\x84\x95\x95\x8c\x85\xc2\x9c\x35\x84\xe5\x07\xb8\xee\x85\xc5\x22\x26\xf3\x7b\x7e\x55\xb4\x58\x9f\x27\xcc\x6f\xc6\x43\x8c\x50\xd0\xb0\xcd\x85\x32\x25\x36\x99\x12\x25\x77\xb4\x61\x54\x22\x76\x62\x65\x90\x35\x30\x01\x74\x92\x10\x6f\x92\xa8\x8f\x22\x7d\x29\xac\x3a\xa3\xfe\xbc\x2d\xb8\xe2\x1e\x0f\x09\x58\x1f\xad\x29\xdb\xba\x97\x65\x82\xfe\x3e\x36\x6a\xf6\x1f\x04\xca\xb4\xc1\x1f\xd0\x50\x8e\x3b\xfc\x05\xf7\x4f\xaa\xb9\x43\xd9\x03\x92\x31\xbd\x2b\xc1\x23\x1d\x81\x7d\x66\x8d\x07\xbb\x3c\x75\x7f\x7e\xee\x9c\x5b\x13\x72\xae\x7b\xbd\x3f\xbc\xce\x7e\x0a\x2f\x1d\xc0\xe8\x8b\xe5\xbb\xcc\x6c\xdb\x20\x96\x0d\xe4\xb8\xae\x95\x8a\xf7\x87\xd7\xf9\x2f\xce\xaf\x4f\x55\x83\x55\x36\x70\x9b\x28\x0d\x6b\x7f\x40\x55\x37\x02\x35\xfd\xa6\xbd\x16\x27\x13\xd3\xf8\x10\x1a\xb5\xd7\x14\xb3\x64\xb1\x29\x5c\xf0\x73\xdb\x83\xe5\x9e\x84\x51\x81\x77\x2a\x6f\xa3\x26\x61\x1d\x79\xce\x4e\xe5\x6d\xd4\x2a\x2c\x23\xef\x36\x51\x71\xa2\xb2\x6f\x5e\xba\xd8\xe7\xfd\xf6\xd4\xa7\xc6\xee\x10\x21\xf0\x81\x0f\x40\x0d\x11\x9e\xe2\xac\x9e\x8f\x2a\xf7\x74\x6b\xd0\x7c\xd1\x5f\xb5\x46\xee\x69\x54\x5e\xda\xb5\x33\x03\x6e\xcb\x97\x25\xee\xb3\x46\x00\xa4\x36\x0b\x7c\x39\x15\x41\xee\xec\x8a\x11\xf2\x37\x0f\xd8\xe4\x50\x56\xc0\x3a\x9e\x1c\xc8\xca\xf8\xbf\x74\x26\xb5\x6e\x0d\xc8\xd4\x58\x3a\x5a\x72\x76\x26\x06\x0b\x4e\xca\x8c\x89\x16\x7b\xc3\x75\x80\xeb\xf8\xb5\xdf\xf7\x5b\x68\xb2\xa9\x5f\xe7\x7d\xbf\x85\x26\x73\x7e\x57\x48\x04\x23\x01\x0e\x0e\xfe\x0f\x00\x00\xff\xff\x58\x51\xfa\xd2\x49\x1d\x00\x00")

func assetsVpcYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsVpcYml,
		"assets/vpc.yml",
	)
}

func assetsVpcYml() (*asset, error) {
	bytes, err := assetsVpcYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vpc.yml", size: 7497, mode: os.FileMode(420), modTime: time.Unix(1485843799, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/bucket.yml":     assetsBucketYml,
	"assets/cluster.yml":    assetsClusterYml,
	"assets/pipeline.yml":   assetsPipelineYml,
	"assets/repo.yml":       assetsRepoYml,
	"assets/service.yml":    assetsServiceYml,
	"assets/vpc-target.yml": assetsVpcTargetYml,
	"assets/vpc.yml":        assetsVpcYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"bucket.yml":     &bintree{assetsBucketYml, map[string]*bintree{}},
		"cluster.yml":    &bintree{assetsClusterYml, map[string]*bintree{}},
		"pipeline.yml":   &bintree{assetsPipelineYml, map[string]*bintree{}},
		"repo.yml":       &bintree{assetsRepoYml, map[string]*bintree{}},
		"service.yml":    &bintree{assetsServiceYml, map[string]*bintree{}},
		"vpc-target.yml": &bintree{assetsVpcTargetYml, map[string]*bintree{}},
		"vpc.yml":        &bintree{assetsVpcYml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
